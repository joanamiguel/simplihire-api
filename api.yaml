openapi: 3.0.0
info:
  version: "1.0.0-oas3"
  title: API PEI - SimpliHire
  license:
    name: MIT
tags:
  - name: Propostas
    description: Endpoints de Proposta
  - name: Registo de Candidato
  - name: Candidatos
    description: Operações relativos aos candidatos
  - name: Candidatura
    description: Operações relativos à candidatura
  - name: Autenticação
    description: Operações relativos ao processo de autentificação
  - name: Eventos
    description: Endpoints de Eventos
  - name: Exames Técnicos
    description: Endpoints de Exames Técnicos
  - name: UI
    description: Endpoints relativos à interface gráfica
  - name: Mensagens
    description: Endpoints relativos às mensagens
servers:
  - url: http://localhost:3000
    description: Local machine
paths:
  #Empresa Recrutadora (Funcionalidades comuns)
  /auth/login:
    post:
      summary: Início de sessão
      description: >-
        Tanto o empregado como o candidato se podem autentificar através deste endpoint
      operationId: login
      tags:
        - Autenticação
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:          
                  type: string
                  description: "Email do utilizador"
                password:    
                  type: string
                  description: "Password do utilizador"
                userType:    
                  type: string
                  description: "Tipo de utilizador -> Empresa ou Candidato"                  
            encoding:
              color:            # color=red,green,blue
                style: form
                explode: false            
      responses:
        '200':
          description: Mensagem a identificar sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAnswer'
        '401':
          description: Password Errada / Utilizador não existente
  /auth/logout:
    get:
      summary: Terminar sessão
      description: >-
        Ao chamar este endpoint é terminada a sessão de um utilizador, quer sendo candidato ou empregador
      security:
        - jwtAuth: []
      operationId: logout
      tags:
        - Autenticação
      responses:
        '200':
          description: Utilizador com sessão terminada
  /auth/registoEmpregado:
    post:
      summary: Criar conta de utilizador empregador
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:          
                  type: string
                  description: "Email do utilizador"
                password:    
                  type: string
                  description: "Password do utilizador"
                dataNascimento:    
                  type: string
                  description: "Data de nascimento do utilizador (yyyy-mm-dd)"
                nome:    
                  type: string
                  description: "Nome do utilizador"
                idEmpresa:    
                  type: number
                  description: "ID da empresa do utilizador (consultar bd)"
            encoding:
              color:            # color=red,green,blue
                style: form
                explode: false
      description: >-
        Ao chamar este endpoint é criada a conta de um utilizador de uma
        empresa empregadora
      operationId: registoEmpresa
      tags:
        - Autenticação
      responses:
        '200':
          description: Conta criada com sucesso
        '400':
          description: Erro no lado do cliente (falta de argumentos, data errada....)
        '500':
          description: Erro no lado do servidor
        '409':
          description: Utilizador já existente          
  #Propostas
  '/propostas/{idProposta}/':
    get:
      summary: Informação de uma proposta
      description: Ao chamar este endpoint devolve informação de uma proposta de emprego
      operationId: getPropostaByID
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a obter
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposta'  
  /propostas/propostasAdicionadas:
    get:
      summary: Propostas Adicionadas
      description: >-
        Ao chamar este endpoint devolve informações de todas as propostas
        adicionadas pela empresa
      operationId: propostasAdicionadas
      security:
        - jwtAuth: []
      tags:
        - Propostas
      responses:
        '200':
          description: As propostas adicionadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  /propostas/propostasPublicadas:
    get:
      summary: Propostas Adicionadas
      description: >-
        Ao chamar este endpoint devolve informações de todas as propostas
        publicadas pela empresa
      operationId: propostasPublicadas
      security:
        - jwtAuth: []
      tags:
        - Propostas
      responses:
        '200':
          description: As propostas publicadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  '/propostas/{idProposta}/publicar':
    put:
      summary: Publicação de uma proposta
      description: Ao chamar este endpoint uma proposta adicionada é públicada no sistema
      operationId: publishPropostaByID
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a publicar
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Proposta publicada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Proposta publicada com erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/encerrar':
    put:
      summary: Encerramento de uma proposta
      description: Ao chamar este endpoint uma proposta adicionada é encerrada no sistema
      operationId: closePropostaByID
      tags:
        - Propostas
      security:
        - jwtAuth: []
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a encerrar
          schema:
            type: string
      
      responses:
        '200':
          description: Proposta encerrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Proposta encerrada com erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  #Candidato
  '/candidatos/{idCandidato}/':
    get:
      summary: Informação de um candidato
      description: Ao chamar este endpoint devolve informação pessoal de um candidato
      operationId: getCandidatoById
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a obter
          schema:
            type: string
      responses:
        '200':
          description: Um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidato'
  '/candidatos/{idCandidato}/propostas':
    get:
      summary: Lista de propostas do candidato
      description: Ao chamar este endpoint devolve a lista de propostas do candidato 
      operationId: getPropostasCandidato
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a quem as propostas a obter pertencem
          schema:
            type: string
      responses:
        '200':
          description: Uma lista das propostas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'

  #Eventos
  '/eventos/{idEvento}/avaliadorTecnico': 
    put:
      summary: Adicionar avaliador tecnico numa entrevista
      description: Ao chamar este endpoint uma um avaliador tecnico é adicionado a uma entrevista
      operationId: putAvaliadorTecnicoEntrevistaId
      tags:
        - Eventos
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento(entrevista) a qual se quer adicionar o avaliador tecnico
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Avaliador tecnico adicionado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a adicionar avaliador tecnico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  
  #ExamesTecnicos
  '/exameTecnico/{idCandidato}/':
    get:
      summary: Exame tecnico de um candidato
      description: Ao chamar este endpoint devolve exame tecnico do candidato
      operationId: getExameTecnicoCandidatoId
      tags:
        - ExameTecnico
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a quem o exame tecnico pertence
          schema:
            type: string
      responses:
        '200':
          description: Retorna exame tecnico do candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exame_Tecnico' 
  
  '/exameTecnico/':
    get:
      summary: Lista de exames tecnicos
      description: Ao chamar este endpoint devolve lista de exames tecnicos
      operationId: getExamesTecnicos
      tags:
        - ExameTecnico
      responses:
        '200':
          description: Retorna lista de exames tecnicos 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exame_Tecnico' 
                
  '/exameTecnico/avaliadorTecnico/':
    get:
      summary: Lista de avaliadores tecnicos
      description: Ao chamar este endpoint devolve lista de avaliadores tecnicos
      operationId: getAvaliadoresTecnicos
      tags:
        - ExameTecnico
      responses:
        '200':
          description: Retorna lista de avaliadores tecnicos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exame_Tecnico'              

  '/exameTecnico/classificacao/{idCandidato}/':  
    put:
      summary: Classifica um candidato
      description: Ao chamar este endpoint é atribuida uma nota ao candidato
      operationId: putClassificacaoCandidatoId
      tags:
        - ExameTecnico
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a que vai ser atribuida uma classificacao
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Classificacao atribuida com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a atribuir classificacao
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'  
                
  '/exameTecnico/propostas/{idProposta}': 
    put:
      summary: Adiciona perguntas ao exame tecnico de uma proposta
      description: Ao chamar este endpoint são adicionadas perguntas ao exame tecnico
      operationId: putPerguntasPropostaId
      tags:
        - ExameTecnico
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a que vai vao ser adicionadas perguntas a entrevista tecnica
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Perguntas adicionadas com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a adicionar perguntas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'  
                
  
  #UI
  '/UI/':
    get:
      summary: Resumo da actividade
      description: Ao chamar este endpoint devolve o resumo da actividade(relatorio business intelligence)
      operationId: getResumoActividade
      tags:
        - UI
      responses:
        '200':
          description: Retorna resumo da actividade
      #falta aqui o schema nao existe o modelo UI

  
  
  #Mensagens
  '/mensagens/':
    get:
      summary: Mensagens recebidas do gestor de proposta
      description: Ao chamar este endpoint devolve as mensagens recebidas do gestor de proposta
      operationId: getMensagens
      tags:
        - Mensagens
      
      responses:
        '200':
          description: Retorna mensagens recebidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagens' 
  
  '/mensagens/propostas/{idProposta}': 
    put:
      summary: Envia mensagem ao gestor da proposta
      description: Ao chamar este endpoint é enviada mensagem ao gestor da proposta
      operationId: putMensagemPropostaId
      tags:
        - Mensagens
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta do gestor de propostas a quem vai ser enviada a mensagem
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Mensagem enviada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro ao enviar mensagem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'            
    
    
  '/mensagens/recebida/candidato/{idCandidato}':
    get:
      summary: Mensagens recebidas do gestor de proposta do candidato
      description: Ao chamar este endpoint devolve as mensagens que o gestor de projecto recebeu do candidato
      operationId: getMensagensGestorCandidato
      tags:
        - Mensagens
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato de quem se quer ver as mensagens
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Retorna mensagens recebidas do candidato ou avaliador tecnico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagens' 
    
                
components:
  securitySchemes:
    jwtAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Candidato:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Candidatos:
      type: array
      items:
        $ref: '#/components/schemas/Candidato'
    Proposta:
      required:
        - id
        - empresa
        - posicao
        - dataLimite
      properties:
        id:
          type: integer
          format: int64
        empresa:
          type: string
        posicao:
          type: string
        dataLimite:
          type: string
    Propostas:
      type: array
      items:
        $ref: '#/components/schemas/Proposta'
    Mensagem:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Mensagens:
      type: array
      items:
        $ref: '#/components/schemas/Mensagem'
    LoginAnswer:
      required:
        - token
        - userType
      properties:
        userType:
          type: string
          description: Type of User
        token:
          type: string
          description: JSON Web Token
    Status:
      description: Se o pedido efetuado teve sucesso ou erro
      required:
        - status
      properties:
        ok:
          type: boolean
          description: 'True se teve sucesso, False se houver erro'
        error:
          type: string
          description: Descrição de erro
    Exame_Tecnico:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
      
    
    Pergunta_Técnica:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
