openapi: 3.0.0
info:
  version: 1.0.0-oas3
  title: API PEI - SimpliHire
  license:
    name: MIT
tags:
  - name: Autenticação
    description: Operações relativos ao processo de autentificação
  - name: Propostas
    description: Endpoints de Proposta
  - name: Candidatos
    description: Operações relativos aos candidatos
  - name: Candidatura
    description: Operações relativos à candidatura
  - name: Eventos
    description: Endpoints de Eventos
  - name: Exame Técnico
    description: Endpoints de Exames Técnicos
  - name: UI
    description: Endpoints relativos à interface gráfica
  - name: Mensagens
    description: Endpoints relativos às mensagens
servers:
  - url: 'http://localhost:3000'
    description: Local machine
paths:
#candidaturas.js
  '/candidatura/{idProposta}/anotacaoes':
    get:
      summary: Obter anotações de uma candidatura
      description: A invocação deste endpoint devolde as anotações de uma candidatura. Apenas Gestores Técnicos da Proposta podem aceder ao Endpoint.
      operationId: gerAnotacoesDumaCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:      
        - name: tipo_anotacao
          in: query
          required: false
          description: O id do tipo de anotação
          schema:
            type: string
        - name: fase
          in: query
          required: false
          description: O id da fase onde a anotação foi introduzida
          schema:
            type: string
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Anotações da Candidatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anotacoes'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a obter informação da BD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      summary: Adiciona anotacoes a uma candidatura
      description: A invocação deste endpoint envolve a atribuição de anotações a uma candidatura
      operationId: putAnotacoesNumaCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                tipo:
                  type: integer
                  description: 'Tipo de Anotação (int, ver tabela)'
                descricao:
                  type: string
                  description: Descrição da Anotação
                fase:
                  type: integer
                  description: Fase da Proposta (ver fases de uma proposta!)
            encoding:
              color:
                style: form
                explode: false
      responses:
        '200':
          description: Anotações adicionadas com sucesso à candidatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Parâmetros em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a Interir
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidatura/{idProposta}/documentos':
    get:
      summary: Obter informações dos documentos de uma candidatura
      operationId: getDocumentos
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: integer
      responses:
        '200':
          description: Documentos obtido com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documentos'
        '400':
          description: Erro a obter documento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a obter informação da BD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      summary: Submissão de um documento a uma candidatura
      description: A invocação deste endpoint envolve a submissão de um documento a uma candidatura
      operationId: putCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                tipoDocumento:
                  type: integer
                documento:
                  type: string
                  format: binary
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Documento submetido com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentoStatus'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a inserir
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                
  '/candidatura/{idProposta}/documentos/{idDocumento}':
    get:
      summary: Obter um documento de uma candidatura
      operationId: getDocumento
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: integer
        - name: idDocumento
          in: path
          required: true
          description: O id do documento
          schema:
            type: integer
      responses:
        '200':
          description: Documento obtido com sucesso!
          content:
            image/*:
              schema:
                type: string
                format: binary
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Documento não Existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a obter informação da BD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      summary: Apagar um documento de uma candidatura
      operationId: getDocumento
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: integer
        - name: idDocumento
          in: path
          required: true
          description: O id do documento
          schema:
            type: integer
      responses:
        '200':
          description: Documento apagado com sucesso!
          content:
            image/*:
              schema:
                type: string
                format: binary
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Documento não Existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a obter informação da BD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                             
  '/candidatura/{idProposta}/estado':
    get:
      summary: Estado de uma candidatura
      description: A invocação deste endpoint retorna o estado de uma candidatura
      operationId: getEstadoCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Estado relativa a uma candidatura a uma proposta
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
  '/candidatura/{idProposta}':
    get:
      summary: Submissão de uma candidatura a uma proposta de emprego
      description: A invocação deste endpoint envolve a submissão de uma candidatura a uma proposta de emprego publicada
      operationId: submitCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: false
          description: Caso queira pesquisar por um candidato em específico
          schema:
            type: string
        - name: sortedByEvaluation
          in: query
          required: false
          description: Se pretende sorteado pela avaliação
          schema:
            type: string            
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Candidatura obtida com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidaturas'
        '500':
          description: Erro a obter (Culpa do servidor)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a obter (Culpa do cliente, falta de paramters!)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                               
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    post:
      summary: Submissão de uma candidatura a uma proposta de emprego
      description: A invocação deste endpoint envolve a submissão de uma candidatura a uma proposta de emprego publicada
      operationId: submitCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                idCandidato:
                  type: integer
                  description: ID do utilizador a candidatar-se
                fase:
                  type: integer
                  description: Fase a atribuir a candidatura
                estado:
                  type: string
                  description: Estado inical da candidatura
                emailReferencia:
                  type: string
                  description: Email de referência                
            encoding:
              color:
                style: form
                explode: false            
      responses:
        '200':
          description: Candidatura submetida com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a submeter (Culpa do servidor)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a submeter (Culpa do cliente, falta de paramters, ou candidatura/fase não existentes no sistema)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                   
  '/candidatura/tiposAnotacoes':
    get:
      summary: Obter tipos de anotações
      operationId: getTiposAnotacoes
      security:
        - jwtAuth: []
      tags:
        - Candidatura
      responses:
        '200':
          description: Os tipos de anotações
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tipo_Anotacao'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidatura/tiposDocumentos':
    get:
      summary: Obter tipos de documentos
      operationId: getTiposDocumentos
      security:
        - jwtAuth: []
      tags:
        - Candidatura
      responses:
        '200':
          description: Os tipos de Eventos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tipo_Documento'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
#END candidaturas.js
#auth.js
  /auth/login:
    post:
      summary: Início de sessão
      description: Tanto o empregado como o candidato se podem autentificar através deste endpoint
      operationId: login
      tags:
        - Autenticação
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email do utilizador
                password:
                  type: string
                  description: Password do utilizador
                userType:
                  type: string
                  description: Tipo de utilizador -> Empresa ou Candidato
            encoding:
              color:
                style: form
                explode: false
      responses:
        '200':
          description: Mensagem a identificar sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAnswer'
        '401':
          description: Password Errada / Utilizador não existente
  /auth/logout:
    get:
      summary: Terminar sessão
      description: 'Ao chamar este endpoint é terminada a sessão de um utilizador, quer sendo candidato ou empregador'
      security:
        - jwtAuth: []
      operationId: logout
      tags:
        - Autenticação
      responses:
        '200':
          description: Utilizador com sessão terminada
  /auth/registoEmpregado:
    post:
      summary: Criar conta de utilizador empregador
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email do utilizador
                password:
                  type: string
                  description: Password do utilizador
                dataNascimento:
                  type: string
                  description: Data de nascimento do utilizador (yyyy-mm-dd)
                nome:
                  type: string
                  description: Nome do utilizador
                idEmpresa:
                  type: number
                  description: ID da empresa do utilizador (consultar bd)
            encoding:
              color:
                style: form
                explode: false
      description: Ao chamar este endpoint é criada a conta de um utilizador de uma empresa empregadora
      operationId: registoEmpresa
      tags:
        - Autenticação
      responses:
        '200':
          description: Conta criada com sucesso
        '400':
          description: 'Erro no lado do cliente (falta de argumentos, data errada....)'
        '409':
          description: Utilizador já existente
        '500':
          description: Erro no lado do servidor
  /auth/registoCandidato:
    post:
      summary: Criar conta de candidato
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email do utilizador
                password:
                  type: string
                  description: Password do utilizador
                dataNascimento:
                  type: string
                  description: Data de nascimento do utilizador (yyyy-mm-dd)
                nome:
                  type: string
                  description: Nome do utilizador
            encoding:
              color:
                style: form
                explode: false
      description: Ao chamar este endpoint é criada a conta de um candidato
      operationId: registoEmpresa
      tags:
        - Autenticação
      responses:
        '200':
          description: Conta criada com sucesso
        '400':
          description: 'Erro no lado do cliente (falta de argumentos, data errada....)'
        '409':
          description: Utilizador já existente
        '500':
          description: Erro no lado do servidor
#END auth.js
#candidatos.js
  '/candidatos/{idCandidato}/experiencias':
    get:
      summary: Experiências profissionais de um candidato
      description: Este endpoint devolve a experiência profissional do candidato
      operationId: getExperienciasProfisionais
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com as experiências profissionais que se pretende obter
          schema:
            type: string
      responses:
        '200':
          description: As experiências profissionais do candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienciasProfissionais'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'         
    put:
      summary: Introduzir experiência profissional
      description: Este endpoint deve inserir uma experiência profissional a um candidato
      operationId: putExperienciaProfissional
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - designacao
                - empresa
                - dataInicio
                - dataFim
              properties:
                designacao:
                  type: string
                  description: Designação da posição
                empresa:
                  type: string
                  description: Empresa empregadora
                dataInicio:
                  type: string
                  description: Data de início
                dataFim:
                  type: string
                  description: Data de fim  
            encoding:
              color:
                style: form
                explode: false                    
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a experiência profissional que se pretende inserir
          schema:
            type: string
      responses:
        '200':
          description: Experiência profissional introduzida com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                         
        '500':
          description: Erro a introduzir experiência profissional
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                                         
    patch:
      summary: Modificar experiência profissional de um candidato
      description: Este endpoint deve modicar uma experiência profissional a um candidato
      operationId: PatchExperienciaProfissional
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                designacao:
                  type: string
                  description: Designação da posição
                empresa:
                  type: string
                  description: Empresa empregadora
                dataInicio:
                  type: string
                  description: Data de início
                dataFim:
                  type: string
                  description: Data de fim  
            encoding:
              color:
                style: form
                explode: false                    
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a experiência profissional que se pretende modificar
          schema:
            type: string
        - name: idExperiencia_Profissional
          in: query
          required: true
          description: O ID da experiência profissional que se pretende modificar
          schema:
            type: string            
      responses:
        '200':
          description: Experiência profissional modificada com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                       
        '500':
          description: Erro a modificar experiência profissional
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'           
        '404':
          description: Experiência profissional não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                  
    delete:
      summary: Eliminar experiência profissional a um candidato
      description: Este endpoint deve inserir uma experiência profissional a um candidato
      operationId: DeteteExperienciaProfissional
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a experiência profissional que se pretende modificar
          schema:
            type: string
        - name: idExperiencia_Profissional
          in: query
          required: true
          description: O ID da experiência profissional que se pretende remover
          schema:
            type: string            
      responses:
        '200':
          description: Experiência profissional eliminada com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                       
        '500':
          description: Erro a eliminar experiência profissional
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'           
        '404':
          description: Experiência profissional não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                                                                          
  '/candidatos/{idCandidato}/competencias':
    get:
      summary: Competências técnicas de um candidato
      description: Este endpoint devolve as experiências técnicas do candidato
      operationId: getCompetenciasTecnicas
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a competências técnicas que se pretende obter
          schema:
            type: string
      responses:
        '200':
          description: As competências técnicas do candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetenciasTecnicas'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'         
    put:
      summary: Introduzir competência técnica
      description: Este endpoint deve inserir uma competência técnica a um candidato
      operationId: putCompetenciasTecnicas
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - idCompetencia
                - nivel
              properties:
                idCompetencia:
                  type: string
                  description: ID da competência
                nivel:
                  type: string
                  description: Nível da competência técnica
            encoding:
              color:
                style: form
                explode: false                    
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a competência técnica que se pretende inserir
          schema:
            type: string
      responses:
        '200':
          description: Competência técnica introduzida com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                         
        '500':
          description: Erro a introduzir competência técnica
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'             
        '400':
          description: Competência técnica já existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                  
    patch:
      summary: Modificar competência técnica de um candidato
      description: Este endpoint deve modicar uma competência técnica a um candidato
      operationId: PatchCompetenciasCandidato
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                nivel:
                  type: string
                  description: Nível da competência técnica
            encoding:
              color:
                style: form
                explode: false                    
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a competência técnica que se pretende modificar
          schema:
            type: string
        - name: idCompetenciaTecnica
          in: query
          required: true
          description: ID da competência técnica a atualizar
          schema:
            type: string            
      responses:
        '200':
          description: Competência técnica modificada com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                       
        '500':
          description: Erro a modificar competência técnica
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'           
        '404':
          description: Competência técnica não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                  
    delete:
      summary: Eliminar competência técnica a um candidato
      description: Este endpoint deve eliminar uma competência técnica a um candidato
      operationId: DeteteCompetenciasCandidato
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a competência técnica que se pretende eliminar
          schema:
            type: string
        - name: idCompetenciaTecnica
          in: query
          required: true
          description: ID da competência técnica a remover
          schema:
            type: string          
      responses:
        '200':
          description: Competência técnica eliminada com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                       
        '500':
          description: Erro a eliminar competência técnica
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'           
        '404':
          description: Competência técnica não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                                                                          
  '/candidatos/{idCandidato}/candidaturas':
    get:
      summary: Lista de candidaruras do candidato
      description: Ao chamar este endpoint devolve a lista de candidaturas do candidato
      operationId: getCandidaturasCandidato
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a quem as candidaturas pertencem
          schema:
            type: string
      responses:
        '200':
          description: Uma lista das candidaturas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
  '/candidatos/{idCandidato}':
    get:
      summary: Informação de um candidato
      description: Ao chamar este endpoint devolve informação pessoal de um candidato
      operationId: getCandidatoById
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a obter
          schema:
            type: string
      responses:
        '200':
          description: Um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidato'
#END candidatos.js
#competencias.js
#END competencias.js
#empregado.js
#END empregado.js
#eventos.js
  '/eventos/{idEvento}/avaliadorTecnico':
    put:
      summary: Adicionar avaliador tecnico numa entrevista
      description: Ao chamar este endpoint uma um avaliador tecnico é adicionado a uma entrevista
      operationId: putAvaliadorTecnicoEntrevistaId
      tags:
        - Eventos
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento(entrevista) a qual se quer adicionar o avaliador tecnico
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Avaliador tecnico adicionado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a adicionar avaliador tecnico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /eventos/tiposEventos:
    get:
      summary: Obter tipos de eventos
      operationId: getTiposEventos
      security:
        - jwtAuth: []
      tags:
        - Eventos
      responses:
        '200':
          description: Os tipos de Eventos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tipo_Evento'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
#END eventos.js
#proposta.js
  '/propostas/{idProposta}/associarEmpregado':
    put:
      summary: Associar empregado a uma proposta de emprego
      description: 'Ao chamar este endpoint a tabela de permissões será alterada, inserindo ou atualizado'
      operationId: associaAvaliadorAPropostaPorIds
      tags:
        - Propostas
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                idEmpregado:
                  type: string
                  description: ID do empregado em associar permissões
                watcher:
                  type: integer
                  description: Se utilizador vai ser watcher
                  format: int1
                gestorProposta:
                  type: integer
                  description: Se utilizador vai ser gestor de proposta
                  format: int1
                avaliadorTecnico:
                  type: integer
                  description: Se utilizador vai ser avaliador técnico
                  format: int1
                gestorEquipa:
                  type: integer
                  description: Se utilizador vai ser gestor de equipa
                  format: int1
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Empregado associado com sucesso à proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a associador o empregado à proposta (erro do cliente)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a associador o empregado à proposta (erro do servidor)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/putEstadoProposta/{estado}':
    put:
      summary: Adiciona estado a proposta de emprego
      description: Ao chamar este endpoint será adicionada um estado a uma determinada proposta de emprego
      operationId: putEstadoEmPropostaPorIds
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
        - name: estado
          in: path
          required: true
          description: O estado que se quer adicionar à proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Estado adicionado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro ao adicionar o estado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/putFaseProposta/{fase}':
    put:
      summary: Adiciona fase a proposta de emprego
      description: Ao chamar este endpoint será adicionada uma fase a uma determinada proposta de emprego
      operationId: putFaseEmPropostaPorIds
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
        - name: fase
          in: path
          required: true
          description: A fase que se quer adicionar à proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Fase adicionada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro ao adicionar a fase
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/encerrar':
    put:
      summary: Encerramento de uma proposta
      description: Ao chamar este endpoint uma proposta adicionada é encerrada no sistema
      operationId: closePropostaByID
      tags:
        - Propostas
      security:
        - jwtAuth: []
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a encerrar
          schema:
            type: string
      responses:
        '200':
          description: Proposta encerrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Proposta encerrada com erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/getEstadoProposta':
    get:
      summary: GET estado de uma proposta
      description: Ao chamar este endpoint devolve o estado em que uma determinada proposta se encontra
      operationId: faseEstadoPorId
      security:
        - jwtAuth: []
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta à qual se quer descobrir o estado
          schema:
            type: string
      responses:
        '200':
          description: O estado da proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  '/propostas/{idProposta}/getFaseProposta':
    get:
      summary: Fase de uma proposta
      description: Ao chamar este endpoint devolve a fase em que uma determinada proposta se encontra
      operationId: fasePropostaPorId
      security:
        - jwtAuth: []
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta à qual se quer descobrir a fase
          schema:
            type: string
      responses:
        '200':
          description: A fase da proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  '/propostas/getProposta/{idProposta}/':
    get:
      summary: Informação de uma proposta
      description: Ao chamar este endpoint devolve informação de uma proposta de emprego
      operationId: getPropostaByID
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a obter
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposta'
  /propostas/propostasAdicionadas:
    get:
      summary: Propostas Adicionadas
      description: Ao chamar este endpoint devolve informações de todas as propostas adicionadas pela empresa
      operationId: propostasAdicionadas
      security:
        - jwtAuth: []
      tags:
        - Propostas
      responses:
        '200':
          description: As propostas adicionadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  /propostas/propostasPublicadas:
    get:
      summary: Propostas Adicionadas
      description: Ao chamar este endpoint devolve informações de todas as propostas publicadas pela empresa
      operationId: propostasPublicadas
      security:
        - jwtAuth: []
      tags:
        - Propostas
      responses:
        '200':
          description: As propostas publicadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  '/propostas/{idProposta}/publicar':
    put:
      summary: Publicação de uma proposta
      description: Ao chamar este endpoint uma proposta adicionada é públicada no sistema
      operationId: publishPropostaByID
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a publicar
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Proposta publicada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Proposta publicada com erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
#END proposta.js

  '/candidatos/{idCandidato}/caixamensagens/{idGestorProposta}/mensagens':
    get:
      summary: Mensagens recebidas do gestor da proposta pelo candidato a uma proposta de emprego
      description: A invocação deste endpoint devolve as mensagens recebidas pelo candidato provenientes do gestor de uma proposta
      operationId: getMensagensGestorProposta
      tags:
        - Mensagens
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato de quem se pretende consultar as mensagens
          schema:
            type: string
        - name: idGestorProposta
          in: path
          required: true
          description: Autor das mensagens recebidas pelo candidato
          schema:
            type: string
      responses:
        '200':
          description: Mensagens recebidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagens'
  '/candidatos/{idCandidato}/caixamensagens/{idGestorProposta}/mensagem':
    put:
      summary: Envio de uma mensagem a um gestor da proposta
      description: A invocação deste endpoint remete ao envio de uma mensagem por parte do candidato ao gestor de propostas
      operationId: sendMensagemGestorProposta
      tags:
        - Mensagens
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idGestorProposta
          in: path
          required: true
          description: O id do gestor da proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Mensagem enviada com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
        '400':
          description: Mensagem não foi enviada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/exameTecnico/{idProposta}/proposta/{idCandidato}/avaliaExameTecnicoCandidato':  
    put:
      summary: Avalia um exame técnico de um candidato e atribui a classificação à candidatura
      description: A invocação deste endpoint envolve a atribuição da pontuação do exame técnico a um candidato
      operationId: putAvaliacaoCandidatoExameTecnico
      tags:
        - Exame Técnico
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                res1:
                  type: integer
                  description: 'Resposta à pergunta de id = 1'
                res2:
                  type: integer
                  description: 'Resposta à pergunta de id = 2'
                res3:
                  type: integer
                  description: 'Resposta à pergunta de id = 3'
                codigo:
                  type: string
                  description: 'Código realizado pelo candidato'
            encoding:
              color:
                style: form
                explode: false
      responses:
        '200':
          description: Avaliação do exame técnico adicionada com sucesso à candidatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Parâmetros em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a Interir
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/exameTecnico/{idCandidato}/':
    get:
      summary: Exame tecnico de um candidato
      description: Ao chamar este endpoint devolve exame tecnico do candidato
      operationId: getExameTecnicoCandidatoId
      security:
        - jwtAuth: []
      tags:
        - Exame Técnico
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a quem o exame tecnico pertence
          schema:
            type: string
      responses:
        '200':
          description: Retorna exame tecnico do candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exame_Tecnico'
  /exameTecnico/:
    get:
      summary: Lista de exames tecnicos
      description: Ao chamar este endpoint devolve lista de exames tecnicos
      operationId: getExamesTecnicos
      security:
        - jwtAuth: []
      tags:
        - Exame Técnico
      responses:
        '200':
          description: Retorna lista de exames tecnicos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exame_Tecnico'
  /exameTecnico/avaliadorTecnico/:
    get:
      summary: Lista de avaliadores tecnicos
      description: Ao chamar este endpoint devolve lista de avaliadores tecnicos
      operationId: getAvaliadoresTecnicos
      tags:
        - Exame Técnico
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Retorna lista de avaliadores tecnicos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exame_Tecnico'
  '/exameTecnico/propostas/{idProposta}':
    put:
      summary: Adiciona perguntas ao exame tecnico de uma proposta
      description: Ao chamar este endpoint são adicionadas perguntas ao exame tecnico
      operationId: putPerguntasPropostaId
      tags:
        - Exame Técnico
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a que vai vao ser adicionadas perguntas a entrevista tecnica
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Perguntas adicionadas com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a adicionar perguntas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /UI/:
    get:
      summary: Resumo da actividade
      description: Ao chamar este endpoint devolve o resumo da actividade(relatorio business intelligence)
      operationId: getResumoActividade
      tags:
        - UI
      responses:
        '200':
          description: Retorna resumo da actividade
  /mensagens/:
    get:
      summary: Mensagens recebidas do gestor de proposta
      description: Ao chamar este endpoint devolve as mensagens recebidas do gestor de proposta
      operationId: getMensagens
      security:
        - jwtAuth: []
      tags:
        - Mensagens
      responses:
        '200':
          description: Retorna mensagens recebidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagens'
  '/mensagens/propostas/{idProposta}':
    put:
      summary: Envia mensagem ao gestor da proposta
      description: Ao chamar este endpoint é enviada mensagem ao gestor da proposta
      operationId: putMensagemPropostaId
      tags:
        - Mensagens
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta do gestor de propostas a quem vai ser enviada a mensagem
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Mensagem enviada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro ao enviar mensagem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/mensagens/recebida/candidato/{idCandidato}':
    get:
      summary: Mensagens recebidas do gestor de proposta do candidato
      description: Ao chamar este endpoint devolve as mensagens que o gestor de projecto recebeu do candidato
      operationId: getMensagensGestorCandidato
      tags:
        - Mensagens
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato de quem se quer ver as mensagens
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Retorna mensagens recebidas do candidato ou avaliador tecnico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagens'


components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Candidato:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Candidatos:
      type: array
      items:
        $ref: '#/components/schemas/Candidato'
    Candidatura:
      required:
        - idCandidato
        - avaliacao
        - estado
        - dataInscricao
        - ultimaAtualizacao
        - Fase
      properties:
        idCandidato:
          type: integer
          format: int64
        avaliacao:
          type: string
        estado:
          type: string
        dataInscricao:
          type: string
        ultimaAtualizacao:
          type: string
        emailReferencia:
          type: string
        Fase:
          type: object
          $ref: '#/components/schemas/Fase'          
    Fase:
      required:
        - idFase
        - titulo
        - proposta
        - ordem
        - tipo
      properties:
        idFase:
          type: integer
        titulo:
          type: string
        proposta:
          type: integer
        ordem:
          type: integer
        tipo:
          type: string
    Candidaturas:
      type: array
      items:
        $ref: '#/components/schemas/Candidatura'
    Proposta:
      required:
        - id
        - empresa
        - posicao
        - dataLimite
      properties:
        id:
          type: integer
          format: int64
        empresa:
          type: string
        posicao:
          type: string
        dataLimite:
          type: string
    Propostas:
      type: array
      items:
        $ref: '#/components/schemas/Proposta'
    CompetenciaTecnica:
      required:
        - designacao
        - idCompetencia_Tecnica
      properties:
        idCompetencia_Tecnica:
          type: integer
          format: int64
        designacao:
          type: string
        Competencias_do_Candidato:
          $ref: '#/components/schemas/Competencias_do_Candidato'
    Competencias_do_Candidato:
      required:
        - nivel
      properties:
        nivel:
          type: string
    CompetenciasTecnicas:
      type: array
      items:
        $ref: '#/components/schemas/CompetenciaTecnica'
    ExperienciasProfissionais:
      type: array
      items:
        $ref: '#/components/schemas/ExperienciaProfissional'
    ExperienciaProfissional:
      required:
        - designacao
        - empresa
        - dataInicio
        - dataFim
      properties:
        designacao:
          type: string
        empresa:
          type: string
        dataInicio:
          type: string
        dataFim:
          type: string
    Mensagem:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Mensagens:
      type: array
      items:
        $ref: '#/components/schemas/Mensagem'
    LoginAnswer:
      required:
        - loggedIn
        - userType
      properties:
        loggedIn:
          type: boolean
        JWT:
          type: string
          description: JSON Web Token
    Status:
      description: Se o pedido efetuado teve sucesso ou erro
      required:
        - status
      properties:
        status:
          type: string
        error:
          type: string
          description: Descrição de erro simples
        devError:
          type: string
          description: Erro com mais informação
    Exame_Tecnico:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Pergunta_Técnica:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Anotacao:
      type: object
      required:
        - idAnotacao
        - candidato
        - proposta
        - tipo
        - descricao
        - dataCriacao
        - lastUpdate
        - fase
        - Empregado_Autor
        - Tipo_Anotacao
      properties:
        idAnotacao:
          type: integer
          format: int64
        candidato:
          type: string
        proposta:
          type: integer
        descricao:
          type: string
        dataCriacao:
          type: string
        lastUpdate:
          type: string
        fase:
          type: integer
        Empregado_Autor:
          type: integer
        Tipo_Anotacao:
          type: object
          $ref: '#/components/schemas/Tipo_Anotacao'
    Anotacoes:
      type: array
      items:
        $ref: '#/components/schemas/Anotacao'
    Tipo_Anotacao:
      type: object
      required:
        - idTipo
        - designacao
      properties:
        idAnotacao:
          type: integer
          format: int64
        designacao:
          type: string
    DocumentoStatus:
      type: object
      required:
        - status
        - idDocumento
      properties:
        status:
          type: string
        idDocumento:
          type: integer
          format: int64
    Documentos:
      type: array
      items:
        $ref: '#/components/schemas/Documento'
    Documento:
      type: object
      required:
        - idDocumentos
      properties:
        idDocumentos:
          type: integer
          format: int64
        Tipo_Documento:
          $ref: '#/components/schemas/Tipo_Documento'
    Tipo_Documento:
      type: object
      required:
        - idtipoDocumento
        - designacao
      properties:
        idtipoDocumento:
          type: integer
          format: int64
        designacao:
          type: string
    Tipo_Evento:
      type: object
      required:
        - idtipoEvento
        - designacao
      properties:
        idtipoDocumento:
          type: integer
          format: int64
        designacao:
          type: string
