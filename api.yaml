openapi: 3.0.0
info:
  version: 1.0.0-oas3
  title: API PEI - SimpliHire
  license:
    name: MIT
tags:
  - name: Autenticação
    description: Operações relativos ao processo de autentificação
  - name: Propostas
    description: Endpoints de Proposta
  - name: Candidatos
    description: Operações relativos aos candidatos
  - name: Candidatura
    description: Operações relativos à candidatura
  - name: Eventos
    description: Endpoints de Eventos
  - name: Exame Técnico
    description: Endpoints de Exames Técnicos
  - name: UI
    description: Endpoints relativos à interface gráfica
  - name: Mensagens
    description: Endpoints relativos às mensagens
  - name: Competências Técnicas
    description: Endpoints relativos às competências técnicas
servers:
  - url: 'http://localhost:3000'
    description: Local machine
paths:
  '/candidatura/{idProposta}/candidato':
    get:
      summary: Informação de um candidato
      description: Ao chamar este endpoint devolve informação pessoal de um candidato asociado a uma candidatura
      operationId: getCandidatoById
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato a obter
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidato'
  '/candidatura/{idProposta}/anotacoes':
    get:
      summary: Obter anotações de uma candidatura
      description: A invocação deste endpoint devolde as anotações de uma candidatura. Apenas Gestores Técnicos da Proposta podem aceder ao Endpoint.
      operationId: gerAnotacoesDumaCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: tipo_anotacao
          in: query
          required: false
          description: O id do tipo de anotação
          schema:
            type: string
        - name: fase
          in: query
          required: false
          description: O id da fase onde a anotação foi introduzida
          schema:
            type: string
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Anotações da Candidatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anotacoes'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a obter informação da BD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      summary: Adiciona anotacoes a uma candidatura
      description: A invocação deste endpoint envolve a atribuição de anotações a uma candidatura
      operationId: putAnotacoesNumaCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                tipo:
                  type: integer
                  description: 'Tipo de Anotação (int, ver tabela)'
                descricao:
                  type: string
                  description: Descrição da Anotação
                fase:
                  type: integer
                  description: Fase da Proposta (ver fases de uma proposta!)
            encoding:
              color:
                style: form
                explode: false
      responses:
        '200':
          description: Anotações adicionadas com sucesso à candidatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Parâmetros em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a Interir
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidatura/{idProposta}/documentos':
    get:
      summary: Obter informações dos documentos de uma candidatura
      operationId: getDocumentos
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: integer
      responses:
        '200':
          description: Documentos obtido com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documentos'
        '400':
          description: Erro a obter documento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a obter informação da BD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      summary: Submissão de um documento a uma candidatura
      description: A invocação deste endpoint envolve a submissão de um documento a uma candidatura
      operationId: putCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                tipoDocumento:
                  type: integer
                documento:
                  type: string
                  format: binary
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Documento submetido com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentoStatus'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a inserir
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidatura/{idProposta}/documentos/{idDocumento}':
    get:
      summary: Obter um documento de uma candidatura
      operationId: getDocumento
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: integer
        - name: idDocumento
          in: path
          required: true
          description: O id do documento
          schema:
            type: integer
      responses:
        '200':
          description: Documento obtido com sucesso!
          content:
            image/*:
              schema:
                type: string
                format: binary
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Documento não Existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a obter informação da BD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      summary: Apagar um documento de uma candidatura
      operationId: getDocumento
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: integer
        - name: idDocumento
          in: path
          required: true
          description: O id do documento
          schema:
            type: integer
      responses:
        '200':
          description: Documento apagado com sucesso!
          content:
            image/*:
              schema:
                type: string
                format: binary
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Documento não Existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a obter informação da BD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidatura/{idProposta}/estado':
    get:
      summary: Estado de uma candidatura
      description: A invocação deste endpoint retorna o estado de uma candidatura
      operationId: getEstadoCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Estado relativa a uma candidatura a uma proposta
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string

  '/candidatura/{idProposta}':
    get:
      summary: Procura de uma candidatura
      operationId: getCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: query
          required: true
          description: ID do Candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Candidatura obtida com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
        '400':
          description: 'Erro a obter (Culpa do cliente, falta de paramters!)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a obter (Culpa do servidor)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'  
    post:
      summary: Submissão de uma candidatura a uma proposta de emprego
      description: A invocação deste endpoint envolve a submissão de uma candidatura a uma proposta de emprego publicada
      operationId: submitCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                idCandidato:
                  type: integer
                  description: ID do utilizador a candidatar-se
                emailReferencia:
                  type: string
                  description: Email de referência
            encoding:
              color:
                style: form
                explode: false
      responses:
        '200':
          description: Candidatura submetida com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: 'Erro a submeter (Culpa do cliente, falta de paramters, ou candidatura/fase não existentes no sistema)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a submeter (Culpa do servidor)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    patch:
      summary: Atualização de uma candidatura
      description: A invocação deste endpoint envolve a atualização de uma candidatura a uma proposta de emprego publicada
      operationId: submitCandidatura
      tags:
        - Candidatura
      security:
        - jwtAuth: []
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                idCandidato:
                  type: integer
                  description: ID do utilizador a candidatar-se
                fase:
                  type: integer
                  description: Fase a atribuir a candidatura
                estado:
                  type: string
                  description: Estado inical da candidatura
                emailReferencia:
                  type: string
                  description: Email de referência
            encoding:
              color:
                style: form
                explode: false
      responses:
        '200':
          description: Candidatura atualizada com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: 'Erro a submeter (Culpa do cliente, falta de paramters, ou candidatura/fase não existentes no sistema)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a submeter (Culpa do servidor)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /candidatura/tiposAnotacoes:
    get:
      summary: Obter tipos de anotações
      operationId: getTiposAnotacoes
      security:
        - jwtAuth: []
      tags:
        - Candidatura
      responses:
        '200':
          description: Os tipos de anotações
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tipo_Anotacao'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /candidatura/tiposDocumentos:
    get:
      summary: Obter tipos de documentos
      operationId: getTiposDocumentos
      security:
        - jwtAuth: []
      tags:
        - Candidatura
      responses:
        '200':
          description: Os tipos de Eventos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tipo_Documento'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /auth/login:
    post:
      summary: Início de sessão
      description: Tanto o empregado como o candidato se podem autentificar através deste endpoint
      operationId: login
      tags:
        - Autenticação
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email do utilizador
                password:
                  type: string
                  description: Password do utilizador
                userType:
                  type: string
                  description: Tipo de utilizador -> Empresa ou Candidato
            encoding:
              color:
                style: form
                explode: false
      responses:
        '200':
          description: Mensagem a identificar sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAnswer'
        '401':
          description: Password Errada / Utilizador não existente
  /auth/logout:
    get:
      summary: Terminar sessão
      description: 'Ao chamar este endpoint é terminada a sessão de um utilizador, quer sendo candidato ou empregador'
      security:
        - jwtAuth: []
      operationId: logout
      tags:
        - Autenticação
      responses:
        '200':
          description: Utilizador com sessão terminada
  /auth/registoEmpregado:
    post:
      summary: Criar conta de utilizador empregador
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email do utilizador
                password:
                  type: string
                  description: Password do utilizador
                dataNascimento:
                  type: string
                  description: Data de nascimento do utilizador (yyyy-mm-dd)
                nome:
                  type: string
                  description: Nome do utilizador
                idEmpresa:
                  type: number
                  description: ID da empresa do utilizador (consultar bd)
            encoding:
              color:
                style: form
                explode: false
      description: Ao chamar este endpoint é criada a conta de um utilizador de uma empresa empregadora
      operationId: registoEmpresa
      tags:
        - Autenticação
      responses:
        '200':
          description: Conta criada com sucesso
        '400':
          description: 'Erro no lado do cliente (falta de argumentos, data errada....)'
        '409':
          description: Utilizador já existente
        '500':
          description: Erro no lado do servidor
  /auth/registoCandidato:
    post:
      summary: Criar conta de candidato
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email do utilizador
                password:
                  type: string
                  description: Password do utilizador
                dataNascimento:
                  type: string
                  description: Data de nascimento do utilizador (yyyy-mm-dd)
                nome:
                  type: string
                  description: Nome do utilizador
            encoding:
              color:
                style: form
                explode: false
      description: Ao chamar este endpoint é criada a conta de um candidato
      operationId: registoEmpresa
      tags:
        - Autenticação
      responses:
        '200':
          description: Conta criada com sucesso
        '400':
          description: 'Erro no lado do cliente (falta de argumentos, data errada....)'
        '409':
          description: Utilizador já existente
        '500':
          description: Erro no lado do servidor
  /auth/me:
    post:
      summary: Informações do utilizador
      description: Informação básicas do utilizador, como nome, data de nascimento,....
      operationId: login
      tags:
        - Autenticação
      responses:
        '200':
          description: Informação do utilizador (observar tipo de content!)
          content:
            application/json/Candidato:
              schema:
                $ref: '#/components/schemas/Candidato'
            application/json/Empregado:
              schema:
                $ref: '#/components/schemas/Empregado'             
  '/candidatos/{idCandidato}/experiencias':
    get:
      summary: Experiências profissionais de um candidato
      description: Este endpoint devolve a experiência profissional do candidato. Apenas o candidato a pode executar.
      operationId: getExperienciasProfisionais
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com as experiências profissionais que se pretende obter
          schema:
            type: string
      responses:
        '200':
          description: As experiências profissionais do candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienciasProfissionais'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Experiência profissional inexistente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      summary: Introduzir experiência profissional
      description: Este endpoint deve inserir uma experiência profissional a um candidato. Apenas o candidato a pode executar.
      operationId: putExperienciaProfissional
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - designacao
                - empresa
                - dataInicio
                - dataFim
              properties:
                designacao:
                  type: string
                  description: Designação da posição
                empresa:
                  type: string
                  description: Empresa empregadora
                dataInicio:
                  type: string
                  description: Data de início
                dataFim:
                  type: string
                  description: Data de fim
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a experiência profissional que se pretende inserir
          schema:
            type: string
      responses:
        '200':
          description: Experiência profissional introduzida com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a introduzir experiência profissional
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    patch:
      summary: Modificar experiência profissional de um candidato
      description: Este endpoint deve modicar uma experiência profissional a um candidato. Apenas o candidato a pode executar.
      operationId: PatchExperienciaProfissional
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                designacao:
                  type: string
                  description: Designação da posição
                empresa:
                  type: string
                  description: Empresa empregadora
                dataInicio:
                  type: string
                  description: Data de início
                dataFim:
                  type: string
                  description: Data de fim
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a experiência profissional que se pretende modificar
          schema:
            type: string
        - name: idExperiencia_Profissional
          in: query
          required: true
          description: O ID da experiência profissional que se pretende modificar
          schema:
            type: string
      responses:
        '200':
          description: Experiência profissional modificada com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Experiência profissional não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a modificar experiência profissional
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      summary: Eliminar experiência profissional a um candidato
      description: Este endpoint deve inserir uma experiência profissional a um candidato. Apenas o candidato a pode executar.
      operationId: DeteteExperienciaProfissional
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a experiência profissional que se pretende modificar
          schema:
            type: string
        - name: idExperiencia_Profissional
          in: query
          required: true
          description: O ID da experiência profissional que se pretende remover
          schema:
            type: string
      responses:
        '200':
          description: Experiência profissional eliminada com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Experiência profissional não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a eliminar experiência profissional
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidatos/{idCandidato}/competencias':
    get:
      summary: Competências técnicas de um candidato
      description: Este endpoint devolve as experiências técnicas do candidato. Apenas o candidato a pode executar.
      operationId: getCompetenciasTecnicas
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a competências técnicas que se pretende obter
          schema:
            type: string
      responses:
        '200':
          description: As competências técnicas do candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetenciasTecnicas'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      summary: Introduzir competência técnica
      description: Este endpoint deve inserir uma competência técnica a um candidato. Apenas o candidato a pode executar.
      operationId: putCompetenciasTecnicas
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - idCompetencia
                - nivel
              properties:
                idCompetencia:
                  type: string
                  description: ID da competência
                nivel:
                  type: string
                  description: Nível da competência técnica
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a competência técnica que se pretende inserir
          schema:
            type: string
      responses:
        '200':
          description: Competência técnica introduzida com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Competência técnica já existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a introduzir competência técnica
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    patch:
      summary: Modificar competência técnica de um candidato
      description: Este endpoint deve modicar uma competência técnica a um candidato. Apenas o candidato a pode executar.
      operationId: PatchCompetenciasCandidato
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                nivel:
                  type: string
                  description: Nível da competência técnica
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a competência técnica que se pretende modificar
          schema:
            type: string
        - name: idCompetenciaTecnica
          in: query
          required: true
          description: ID da competência técnica a atualizar
          schema:
            type: string
      responses:
        '200':
          description: Competência técnica modificada com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Competência técnica não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a modificar competência técnica
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      summary: Eliminar competência técnica a um candidato
      description: Este endpoint deve eliminar uma competência técnica a um candidato. Apenas o candidato a pode executar.
      operationId: DeteteCompetenciasCandidato
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a competência técnica que se pretende eliminar
          schema:
            type: string
        - name: idCompetenciaTecnica
          in: query
          required: true
          description: ID da competência técnica a remover
          schema:
            type: string
      responses:
        '200':
          description: Competência técnica eliminada com successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado a aceder ao recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Competência técnica não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a eliminar competência técnica
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /candidatos/notificacoes:
    get:
      summary: Obter as notificações de um candidato
      description: Ao chamar este endpoint serão devolvidas as notificações de um candidato. O candidato é identificado através da chave JWT.
      operationId: getNotificacoesCandidato
      tags:
        - Candidatos
      parameters:
        - name: limit
          in: query
          required: false
          description: Número de notificações a obter
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: Offset de notificações (quantas notificações avança)
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Notificações de um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacoes'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /candidatos/readNotificacoes:
    post:
      summary: Marcar notificações como lidas
      description: Ao chamar este endpoint serão marcadas as notificações de um candidato como lidas. O candidato é identificado através da chave JWT.
      operationId: postNotificacoesCandidato
      tags:
        - Candidatos
      parameters:
        - name: limit
          in: query
          required: false
          description: Número de notificações a obter
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Notificações marcadas como lidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidatos/{idCandidato}':
    get:
      summary: Informação de um candidato
      description: Ao chamar este endpoint devolve informação pessoal de um candidato. Apenas o candidato a pode executar.
      operationId: getCandidatoById
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a obter
          schema:
            type: string
      responses:
        '200':
          description: Um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidato'
  '/candidatos/{idCandidato}/candidaturas':
    get:
      summary: Candidaturas de um candidato
      description: Ao chamar este endpoint devolve as candidaturas de um candidato. Apenas o candidato a pode executar.
      operationId: getCandidaturasCandidato
      tags:
        - Candidatos
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a obter
          schema:
            type: string
      responses:
        '200':
          description: Candidaturas de um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidaturas'
        '403':
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/{idEvento}/info':
    get:
      summary: Dados/Informações de um evento
      description: Ao chamar este endpoint os dados de um evento são retornados
      operationId: getInfoEvento
      tags:
        - Eventos
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível devolver o evento.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /eventos/tiposEventos:
    get:
      summary: Obter tipos de eventos
      operationId: getTiposEventos
      security:
        - jwtAuth: []
      tags:
        - Eventos
      responses:
        '200':
          description: Os tipos de Eventos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tipo_Evento'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/tipo/{idTipo}':
    get:
      summary: Dados/Informações de eventos de um certo tipo
      description: Ao chamar este endpoint os dados de eventos de um certo tipo são retornados
      operationId: getEventosbyTipo
      tags:
        - Eventos
      parameters:
        - name: idTipo
          in: path
          required: true
          description: O id do tipo pretendido
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível devolver os eventos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/{idEvento}/empregados':
    get:
      summary: Empregados associados a um evento
      description: Ao chamar este endpoint são retornados os empregados associados a um evento
      operationId: getEmpregadosAssociados
      tags:
        - Eventos
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível devolver os empregados.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/{idEvento}/candidato':
    get:
      summary: Candidato associado a um evento
      description: Ao chamar este endpoint é retornado o candidato associado ao evento
      operationId: getCandidatoAssociado
      tags:
        - Eventos
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível devolver o candidato.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/proposta/{idProposta}':
    get:
      summary: Eventos de uma proposta
      description: Ao chamar este endpoint são retornados os eventos de uma proposta
      operationId: getEventosProposta
      tags:
        - Eventos
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível devolver os eventos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/empregado/{idEmpregado}':
    get:
      summary: Eventos de um empregado
      description: Ao chamar este endpoint são retornados os eventos de um empregado
      operationId: getEventosEmpregado
      tags:
        - Eventos
      parameters:
        - name: idEmpregado
          in: path
          required: true
          description: O id do empregado
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível devolver os eventos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/candidato/{idCandidato}':
    get:
      summary: Eventos de um candidato
      description: Ao chamar este endpoint são retornados os eventos de um candidato
      operationId: getEventosCandidato
      tags:
        - Eventos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível devolver os eventos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/{idEvento}/perguntasDeSugestao':
    get:
      summary: Perguntas de Sugestão de um evento
      description: Ao chamar este endpoint são retornados as perguntas de sugestão de um evento
      operationId: getPerguntasSugestao
      tags:
        - Eventos
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível devolver as perguntas de sugestão
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/{idEvento}/putAnotacoes':
    put:
      summary: Adicionar uma nova anotação a um evento
      description: Ao chamar este endpoint será adicionada uma nova anotação a um dado evento
      operationId: putAnotacoesEvento
      tags:
        - Eventos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                anotacoes:
                  type: string
                  description: texto das anotações
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível inserir as anotações.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/{idEvento}/putEmpregado':
    put:
      summary: Associar um empregado a um evento
      description: Ao chamar este endpoint será associado um empregado a um dado evento
      operationId: putAssociarEmpregado
      tags:
        - Eventos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                idEmpregado:
                  type: string
                  description: ID do empregado a associar
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível associar o empregado ao evento.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/{idEvento}/putPerguntaSugestao':
    put:
      summary: Associar uma pergunta de sugestão a um evento
      description: Ao chamar este endpoint será associada uma pergunta de sugestão a um dado evento
      operationId: putPerguntaSugestao
      tags:
        - Eventos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                questao:
                  type: string
                  description: Questão a associar
                descricao:
                  type: string
                  description: Descrição da questão
                nivel:
                  type: string
                  description: Nível da questão
                areaDesenvolvimento:
                  type: string
                  description: Área de desenvolvimento da questão
                tipoPergunta:
                  type: string
                  description: Tipo da questão
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível inserir a pergunta de sugestão.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /eventos/evento:
    put:
      summary: Criar um evento
      description: Ao chamar este endpoint será criado um novo evento
      operationId: putEvento
      tags:
        - Eventos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                dataEvento:
                  type: string
                  description: Data do evento
                anotacoes:
                  type: string
                  description: Anotações do evento
                tipoEvento:
                  type: integer
                  description: ID do Tipo de Evento
                  format: int1
                fase:
                  type: integer
                  description: ID da Fase
                  format: int1
                candidato:
                  type: integer
                  description: ID do Candidato
                  format: int1
                proposta:
                  type: integer
                  description: ID da Proposta
                  format: int1
            encoding:
              color:
                style: form
                explode: false
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível inserir o evento.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/{idEvento}/data':
    patch:
      summary: Alterar data de um evento
      description: Ao chamar este endpoint será alterada a data de um evento
      operationId: patchNovaData
      tags:
        - Eventos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                dataEvento:
                  type: string
                  description: Nova data do evento
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível atualizar a data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/eventos/{idEvento}/hora':
    patch:
      summary: Alterar hora de um evento
      description: Ao chamar este endpoint será alterada a hora de um evento
      operationId: patchNovaHora
      tags:
        - Eventos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                horaEvento:
                  type: string
                  description: Nova hora do evento
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idEvento
          in: path
          required: true
          description: O id do evento
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível atualizar a hora.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/candidaturas':
    get:
      summary: Candidaturas a uma proposta de emprego
      description: A invocação deste endpoint devolve a lista de candidaturas de uma proposta de emprego. A lista por defeito filtra os candidatos automáticamente excluídos. Para obter a lista de candidatos filtrados, a query paramter onlyFiltrados deve ser usada.
      operationId: getCandidaturasDeUmaProposta
      tags:
        - Propostas
      security:
        - jwtAuth: []
      parameters:
        - name: onlyFiltrados
          in: query
          required: false
          description: Caso queira filtrar para obter apenas os candidatos excluídos
          schema:
            type: string
        - name: sortedByEvaluation
          in: query
          required: false
          description: Se pretende sorteado pela avaliação
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Candidatura obtida com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidaturas'
        '400':
          description: 'Erro a obter (Culpa do cliente, falta de paramters!)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a obter (Culpa do servidor)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                
  '/propostas/{idProposta}/associarEmpregado':
    put:
      summary: Associar empregado a uma proposta de emprego
      description: 'Ao chamar este endpoint a tabela de permissões será alterada, inserindo ou atualizado'
      operationId: associaAvaliadorAPropostaPorIds
      tags:
        - Propostas
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                idEmpregado:
                  type: string
                  description: ID do empregado em associar permissões
                watcher:
                  type: integer
                  description: Se utilizador vai ser watcher
                  format: int1
                gestorProposta:
                  type: integer
                  description: Se utilizador vai ser gestor de proposta
                  format: int1
                avaliadorTecnico:
                  type: integer
                  description: Se utilizador vai ser avaliador técnico
                  format: int1
                gestorEquipa:
                  type: integer
                  description: Se utilizador vai ser gestor de equipa
                  format: int1
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Empregado associado com sucesso à proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a associador o empregado à proposta (erro do cliente)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a associador o empregado à proposta (erro do servidor)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}':
    get:
      summary: Obter uma proposta segundo o seu ID
      description: Ao chamar este endpoint será devolvida uma proposta segundo o ID presente no path
      operationId: getProposta
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Informações de uma proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposta'      
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível devolver a proposta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/fases':
    get:
      summary: Obter as fases de uma proposta
      description: Ao chamar este endpoint serão devolvidas as fases de uma proposta
      operationId: getFasesProposta
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Fases de uma proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fases'      
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível devolver as fases.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/fase':
    put:
      summary: Adicionar uma fase a uma proposta
      description: Ao chamar este endpoint uma fase é adicionada a uma proposta
      operationId: putFaseProposta
      tags:
        - Propostas
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                titulo:
                  type: string
                  description: Título da fase
                ordem:
                  type: string
                  description: Ordem da fase
                tipo:
                  type: string
                  description: Tipo da fase
            encoding:
              color:
                style: form
                explode: false
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a encerrar
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível adicionar a fase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/publicar':
    patch:
      summary: Mudar o estado de uma proposta para "Publicada"
      description: Ao chamar este endpoint o estado de uma proposta é alterado para "Publicada"
      operationId: patchPublicarProposta
      security:
        - jwtAuth: []
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível publicar a proposta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/encerrar':
    patch:
      summary: Mudar o estado de uma proposta para "Encerrada"
      description: Ao chamar este endpoint o estado de uma proposta é alterado para "Encerrada"
      operationId: patchEncerrarProposta
      security:
        - jwtAuth: []
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta à qual se quer descobrir a fase
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
        '400':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '501':
          description: Não foi possível encerrar a proposta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/permissoes':
    get:
      summary: Obter permissões de uma proposta
      description: 'Ao chamar este endpoint será a lista de empregados de uma proposta, e as permissões definidas'
      operationId: getPermissoesProposta
      tags:
        - Propostas
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Lista de permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissoesProposta'
        '403':
          description: Utilizador não autorizado a aceder o recurso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Proposta não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /propostas/areasDesenvolvimento:
    get:
      summary: Obter áreas de desenvolvimento
      description: Ao chamar este endpoint será devolvida a lista de áreas de desenvolvimento definidas no sistema
      operationId: getAreasDesenvolvimento
      tags:
        - Propostas
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Áreas de Desenvolvimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreasDesenvolvimento'
        '403':
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /propostas/posicoes:
    get:
      summary: Obter posições
      description: Ao chamar este endpoint será devolvida a lista de posições definidas no sistema
      operationId: getAreasDesenvolvimento
      tags:
        - Propostas
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Posições possíveis no sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posicoes'
        '403':
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /propostas/estados:
    get:
      summary: Obter estados
      description: Ao chamar este endpoint será devolvida a lista de estados definidas no sistema
      operationId: getAreasDesenvolvimento
      tags:
        - Propostas
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Estados possíveis no sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estados'
        '403':
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /propostas:
    post:
      summary: Adicionar uma proposta
      description: Ao chamar este endpoint uma proposta é adicionada
      operationId: putProposta
      tags:
        - Empregado
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                designacao:
                  type: string
                  description: Designação da Proposta
                descricao:
                  type: string
                  description: Descrição da Proposta
                datainicio:
                  type: string
                  description: Data de início da Proposta (YYYY-MM-DD)
                datafim:
                  type: string
                  description: Data de fim da Proposta (YYYY-MM-DD)
                areaDesenvolvimento:
                  type: integer
                  description: ID da Área de Desenvolvimento da Proposta
                  format: int1
                posicao:
                  type: integer
                  description: ID da Posição da Proposta
                  format: int1
                filter:
                  type: integer
                  description: Se a proposta deve automaticamente filtrar as candidaturas
                  format: int1                  
                fases:
                  type: object
                  description: 'Fases de uma proposta, em JSON (Array do objeto Fase, tendo o título, ordem, e tipo)'
                documentos:
                  type: object
                  description: 'Documentos de uma proposta, em JSON (Array do objeto Documento, tendo o idDocumentoPedido)'
                competencias:
                  type: object
                  description: 'Competências de uma proposta, em JSON (Array do objeto Competência, tendo o idCompetencia_Tecnica e nível)'
            encoding:
              color:
                style: form
                explode: false
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Estado não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    get:
      summary: Obter propostas
      description: Obter informações de todas as propostas, ou de uma dada empresa, ou cujo empregado está associado, ou ambas.
      operationId: get Propostas
      tags:
        - Propostas
      parameters:
        - name: idEmpresa
          in: query
          required: false
          description: Filtrar propostas por empresa
          schema:
            type: string    
        - name: funcionarioAssociado
          in: query
          required: false
          description: Especificar por propostas cujo funcionário esteja associado à proposta
          schema:
            type: string                            
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
        '403':
          description: Utilizador não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Estado não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                
  '/empregado/{idEmpregado}/propostasAdicionadas':
    get:
      summary: Obter as propostas adicionadas de um empregado
      description: Ao chamar este endpoint serão devolvidas as propostas adicionadas de um empregado
      operationId: getPropostasAdicionadas
      tags:
        - Empregado
      parameters:
        - name: idEmpregado
          in: path
          required: true
          description: O id do empregado
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '404':
          description: Proposta não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/empregado/{idEmpregado}/propostasPublicadas':
    get:
      summary: Obter as propostas publicadas de um empregado
      description: Ao chamar este endpoint serão devolvidas as propostas publicadas de um empregado
      operationId: getPropostasPublicadas
      tags:
        - Empregado
      parameters:
        - name: idEmpregado
          in: path
          required: true
          description: O id do empregado
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '404':
          description: Proposta não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /empregado/notificacoes:
    get:
      summary: Obter as notificações de um empregado
      description: Ao chamar este endpoint serão devolvidas as notificações de um empregado. O empregado é identificado através da chave JWT.
      operationId: getNotificacoesEmpregado
      tags:
        - Empregado
      parameters:
        - name: limit
          in: query
          required: false
          description: Número de notificações a obter
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: Offset de notificações (quantas notificações avança)
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Notificações de um empregado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacoes'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /empregado/readNotificacoes:
    post:
      summary: Marcar notificações como lidas
      description: Ao chamar este endpoint serão marcadas as notificações de um empregado como lidas. O empregado é identificado através da chave JWT.
      operationId: postNotificacoesEmpregado
      tags:
        - Empregado
      parameters:
        - name: limit
          in: query
          required: false
          description: Número de notificações a obter
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Notificações marcadas como lidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidatos/{idCandidato}/caixamensagens/{idGestorProposta}/mensagens':
    get:
      summary: Mensagens recebidas do gestor da proposta pelo candidato a uma proposta de emprego
      description: A invocação deste endpoint devolve as mensagens recebidas pelo candidato provenientes do gestor de uma proposta
      operationId: getMensagensGestorProposta
      tags:
        - Mensagens
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato de quem se pretende consultar as mensagens
          schema:
            type: string
        - name: idGestorProposta
          in: path
          required: true
          description: Autor das mensagens recebidas pelo candidato
          schema:
            type: string
      responses:
        '200':
          description: Mensagens recebidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagens'
  '/candidatos/{idCandidato}/caixamensagens/{idGestorProposta}/mensagem':
    put:
      summary: Envio de uma mensagem a um gestor da proposta
      description: A invocação deste endpoint remete ao envio de uma mensagem por parte do candidato ao gestor de propostas
      operationId: sendMensagemGestorProposta
      tags:
        - Mensagens
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idGestorProposta
          in: path
          required: true
          description: O id do gestor da proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Mensagem enviada com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
        '400':
          description: Mensagem não foi enviada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/exameTecnico/{idCandidato}/':
    get:
      summary: Exame tecnico de um candidato
      description: Ao chamar este endpoint devolve exame tecnico do candidato
      operationId: getExameTecnicoCandidatoId
      security:
        - jwtAuth: []
      tags:
        - Exame Técnico
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a quem o exame tecnico pertence
          schema:
            type: string
      responses:
        '200':
          description: Retorna exame tecnico do candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exame_Tecnico'
  /exameTecnico/:
    get:
      summary: Lista de exames tecnicos
      description: Ao chamar este endpoint devolve lista de exames tecnicos
      operationId: getExamesTecnicos
      security:
        - jwtAuth: []
      tags:
        - Exame Técnico
      responses:
        '200':
          description: Retorna lista de exames tecnicos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exame_Tecnico'
  /exameTecnico/avaliadorTecnico/:
    get:
      summary: Lista de avaliadores tecnicos
      description: Ao chamar este endpoint devolve lista de avaliadores tecnicos
      operationId: getAvaliadoresTecnicos
      tags:
        - Exame Técnico
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Retorna lista de avaliadores tecnicos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exame_Tecnico'
  '/exameTecnico/classificacao/{idCandidato}/':
    put:
      summary: Classifica um candidato
      description: Ao chamar este endpoint é atribuida uma nota ao candidato
      operationId: putClassificacaoCandidatoId
      tags:
        - Exame Técnico
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a que vai ser atribuida uma classificacao
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Classificacao atribuida com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a atribuir classificacao
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/exameTecnico/propostas/{idProposta}':
    put:
      summary: Adiciona perguntas ao exame tecnico de uma proposta
      description: Ao chamar este endpoint são adicionadas perguntas ao exame tecnico
      operationId: putPerguntasPropostaId
      tags:
        - Exame Técnico
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a que vai vao ser adicionadas perguntas a entrevista tecnica
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Perguntas adicionadas com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a adicionar perguntas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/disponibilidade/{idCandidato}/apagarDisponibilidade/{idDisponibilidade}':
    delete:
      summary: Apagar disponibilidade
      description: Ao chamar este endpoint apaga a disponibilidade
      operationId: apagarDisponibilidade
      tags:
        - Disponibilidade
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: id do candidato a quem vai ser apagada a disponibilidade
          schema:
            type: string
        - name: idDisponibilidade
          in: path
          required: true
          description: id da disponibilidade  que vai ser apagada
          schema:
            type: string        
      security:
      - jwtAuth: []
      responses:
        '200':
          description: Disponibilidade apagada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Não foi possível eliminar disponibilidade
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status' 
        '404':
          description: Disponibilidade não existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status' 
        '500':
          description: Erro a apagar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status' 
  '/disponibilidade/{idCandidato}/getDisponibilidade':
    get :
      summary: Lista disponibilidades do candidato
      description: Ao chamar este endpoint lista todas as disponibilidades do candidato
      operationId: getDisponibilidade
      tags:
        - Disponibilidade
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: id do candidato a quem vai-se listar as disponibilidades
          schema:
            type: string
      security:
      - jwtAuth: []
      responses:
        
        '400':
          description: Candidato não existe/Candidato não tem disponibilidades definidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status' 
  '/exameTecnico/{idProposta}/proposta/{idCandidato}/avaliaExameTecnicoCandidato':  
    put:
      summary: Avalia um exame técnico de um candidato e atribui a classificação à candidatura
      description: A invocação deste endpoint envolve a atribuição da pontuação do exame técnico a um candidato
      operationId: putAvaliacaoCandidatoExameTecnico
      tags:
        - Exame Técnico
      security:
        - jwtAuth: []
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                res1:
                  type: integer
                  description: 'Resposta à pergunta de id = 1'
                res2:
                  type: integer
                  description: 'Resposta à pergunta de id = 2'
                res3:
                  type: integer
                  description: 'Resposta à pergunta de id = 3'
                codigo:
                  type: string
                  description: 'Código realizado pelo candidato'
            encoding:
              color:
                style: form
                explode: false
      responses:
        '200':
          description: Avaliação do exame técnico adicionada com sucesso à candidatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Parâmetros em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '403':
          description: Utilizador sem permissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: Erro a Interir
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'             
  '/disponibilidade/:idDisponibilidade/setDisponibilidade/:idCandidato/':
    put :
      summary: Adiciona disponibilidade do candidato
      description: Ao chamar este endpoint é adicionada uma nova disponibilidade do candidato
      operationId: setDisponibilidade
      tags:
        - Disponibilidade
      parameters:
        - name: idDisponibilidade
          in: path
          required: true
          description: id da disponibilidade a adicionar
          schema:
            type: string
      security:
      - jwtAuth: []
      
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - data
                - disponibilidade
                - data_inicio
                - data_fim
              properties:
                data:
                  type: string
                  description: data do dia a definir disponibilidade
                disponibilidade:
                  type: boolean
                  description: Booleano da disponibilidade 0->disponivel 1-> indisponivel
                data_inicio:
                  type: string
                  description: hora inicio do intervalo de disponibilidade
                data_fim:
                  type: string
                  description: hora fim do intervalo de disponibilidade
            encoding:
              color:
                style: form
                explode: false
      
      responses:
        '200':
          description: Adicionada disponibilidade com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status' 
      
        '400':
          description: Candidado nao existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status' 
        
        
        '500':
          description: Campos em falta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'                  
                
                
                
                
  /UI/:
    get:
      summary: Resumo da actividade
      description: Ao chamar este endpoint devolve o resumo da actividade(relatorio business intelligence)
      operationId: getResumoActividade
      tags:
        - UI
      responses:
        '200':
          description: Retorna resumo da actividade
  /mensagens/:
    get:
      summary: Mensagens recebidas do gestor de proposta
      description: Ao chamar este endpoint devolve as mensagens recebidas do gestor de proposta
      operationId: getMensagens
      security:
        - jwtAuth: []
      tags:
        - Mensagens
      responses:
        '200':
          description: Retorna mensagens recebidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagens'
  '/mensagens/propostas/{idProposta}':
    put:
      summary: Envia mensagem ao gestor da proposta
      description: Ao chamar este endpoint é enviada mensagem ao gestor da proposta
      operationId: putMensagemPropostaId
      tags:
        - Mensagens
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta do gestor de propostas a quem vai ser enviada a mensagem
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Mensagem enviada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro ao enviar mensagem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/mensagens/recebida/candidato/{idCandidato}':
    get:
      summary: Mensagens recebidas do gestor de proposta do candidato
      description: Ao chamar este endpoint devolve as mensagens que o gestor de projecto recebeu do candidato
      operationId: getMensagensGestorCandidato
      tags:
        - Mensagens
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato de quem se quer ver as mensagens
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Retorna mensagens recebidas do candidato ou avaliador tecnico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagens'
  /competencias:
    get:
      summary: Obter competências técnicas definidas
      description: Ao chamar este endpoint devolve as competências técnicas
      operationId: getCompetenciasTecnicas
      tags:
        - Competências Técnicas
      parameters:
        - name: idCompetencia_Tecnica
          in: query
          required: false
          description: O id da competência técnica
          schema:
            type: integer
        - name: designacao
          in: query
          required: false
          description: Nome da competência técnica
          schema:
            type: integer
      responses:
        '200':
          description: Retorna competências técnicas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetenciasTecnicas'
             
        '403':
          description: Utilizador não autorizado (Token não válida)                
components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Candidato:
      required:
        - idCandidato
        - nome
        - email
        - dataNascimento
      properties:
        idCandidato:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        dataNascimento:
          type: string          
    Empregado:
      required:
        - idEmpregado
        - nome
        - email
        - dataNascimento
        - empresa
      properties:
        idCandidato:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        dataNascimento:
          type: string
        empresa:
          type: integer
          format: int64          
    Candidatos:
      type: array
      items:
        $ref: '#/components/schemas/Candidato'
    Candidatura:
      required:
        - idCandidato
        - avaliacao
        - estado
        - dataInscricao
        - ultimaAtualizacao
        - Fase
      properties:
        idCandidato:
          type: integer
          format: int64
        avaliacao:
          type: string
        estado:
          type: string
        dataInscricao:
          type: string
        ultimaAtualizacao:
          type: string
        emailReferencia:
          type: string
        Fase:
          type: object
          $ref: '#/components/schemas/Fase'
        Candidato:
          type: object
          $ref: '#/components/schemas/Candidato'          
    Fase:
      required:
        - idFase
        - titulo
        - proposta
        - ordem
        - tipo
      properties:
        idFase:
          type: integer
        titulo:
          type: string
        proposta:
          type: integer
        ordem:
          type: integer
        tipo:
          type: string
    Candidaturas:
      type: array
      items:
        $ref: '#/components/schemas/Candidatura'
    Proposta:
      required:
        - idProposta
        - designacao
        - creationDate
        - lastUpdate
        - datainicio
        - datafim
        - AreaDesenvolvimento
        - Posicao
        - Estado
        - Fase
      properties:
        idProposta:
          type: integer
          format: int64
        designacao:
          type: string
        creationDate:
          type: string
        lastUpdate:
          type: string
        datainicio:
          type: string
        datafim:
          type: string                    
        AreaDesenvolvimento:
          $ref: '#/components/schemas/AreaDesenvolvimento'
        Posicao:
          $ref: '#/components/schemas/Posicao'
        Estado:
          $ref: '#/components/schemas/Estado'
        Fase:
          $ref: '#/components/schemas/Fase'                             
    Propostas:
      type: array
      items:
        $ref: '#/components/schemas/Proposta'
    CompetenciaTecnica:
      required:
        - designacao
        - idCompetencia_Tecnica
      properties:
        idCompetencia_Tecnica:
          type: integer
          format: int64
        designacao:
          type: string
        Competencias_do_Candidato:
          $ref: '#/components/schemas/Competencias_do_Candidato'
    Competencias_do_Candidato:
      required:
        - nivel
      properties:
        nivel:
          type: string
    CompetenciasTecnicas:
      type: array
      items:
        $ref: '#/components/schemas/CompetenciaTecnica'
    ExperienciasProfissionais:
      type: array
      items:
        $ref: '#/components/schemas/ExperienciaProfissional'
    ExperienciaProfissional:
      required:
        - designacao
        - empresa
        - dataInicio
        - dataFim
      properties:
        designacao:
          type: string
        empresa:
          type: string
        dataInicio:
          type: string
        dataFim:
          type: string
    Mensagem:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Mensagens:
      type: array
      items:
        $ref: '#/components/schemas/Mensagem'
    LoginAnswer:
      required:
        - loggedIn
        - userType
      properties:
        loggedIn:
          type: boolean
        JWT:
          type: string
          description: JSON Web Token
    Status:
      description: Se o pedido efetuado teve sucesso ou erro
      required:
        - status
      properties:
        status:
          type: string
        error:
          type: string
          description: Descrição de erro simples
        devError:
          type: string
          description: Erro com mais informação
    Exame_Tecnico:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Pergunta_Técnica:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Anotacao:
      type: object
      required:
        - idAnotacao
        - candidato
        - proposta
        - tipo
        - descricao
        - dataCriacao
        - lastUpdate
        - fase
        - Empregado_Autor
        - Tipo_Anotacao
      properties:
        idAnotacao:
          type: integer
          format: int64
        candidato:
          type: string
        proposta:
          type: integer
        descricao:
          type: string
        dataCriacao:
          type: string
        lastUpdate:
          type: string
        fase:
          type: integer
        Empregado_Autor:
          type: integer
        Tipo_Anotacao:
          type: object
          $ref: '#/components/schemas/Tipo_Anotacao'
    Anotacoes:
      type: array
      items:
        $ref: '#/components/schemas/Anotacao'
    Fases:
      type: array
      items:
        $ref: '#/components/schemas/Fase'        
    Tipo_Anotacao:
      type: object
      required:
        - idTipo
        - designacao
      properties:
        idAnotacao:
          type: integer
          format: int64
        designacao:
          type: string
    DocumentoStatus:
      type: object
      required:
        - status
        - idDocumento
      properties:
        status:
          type: string
        idDocumento:
          type: integer
          format: int64
    Documentos:
      type: array
      items:
        $ref: '#/components/schemas/Documento'
    Documento:
      type: object
      required:
        - idDocumentos
      properties:
        idDocumentos:
          type: integer
          format: int64
        Tipo_Documento:
          $ref: '#/components/schemas/Tipo_Documento'
    Tipo_Documento:
      type: object
      required:
        - idtipoDocumento
        - designacao
      properties:
        idtipoDocumento:
          type: integer
          format: int64
        designacao:
          type: string
    Tipo_Evento:
      type: object
      required:
        - idtipoEvento
        - designacao
      properties:
        idtipoDocumento:
          type: integer
          format: int64
        designacao:
          type: string
    Notificacoes:
      type: array
      items:
        $ref: '#/components/schemas/Notificacao'
    Notificacao:
      type: object
      required:
        - idNotificacao
        - read
        - titulo
        - descricao
        - createdAt
        - TipoNotificacao
      properties:
        idNotificacao:
          type: integer
          format: int64
        read:
          type: integer
          format: int1
        titulo:
          type: string
        descricao:
          type: string
        createdAt:
          type: string
        TipoNotificacao:
          $ref: '#/components/schemas/TipoNotificacao'
    TipoNotificacao:
      type: object
      required:
        - idtipoNotificacao
        - descricao
      properties:
        idtipoNotificacao:
          type: integer
          format: int64
        descricao:
          type: string
    Estados:
      type: array
      items:
        $ref: '#/components/schemas/Estado'
    AreasDesenvolvimento:
      type: array
      items:
        $ref: '#/components/schemas/AreaDesenvolvimento'
    Posicoes:
      type: array
      items:
        $ref: '#/components/schemas/Posicao'
    Estado:
      type: object
      required:
        - idEstado
        - designacao
      properties:
        idEstado:
          type: integer
          format: int64
        designacao:
          type: string
    AreaDesenvolvimento:
      type: object
      required:
        - idAreaDesenvolvimento
        - descricao
      properties:
        idAreaDesenvolvimento:
          type: integer
          format: int64
        descricao:
          type: string
    Posicao:
      type: object
      required:
        - idPosicao
        - titulo
      properties:
        idPosicao:
          type: integer
          format: int64
        titulo:
          type: string
    PermissoesProposta:
      type: array
      items:
        $ref: '#/components/schemas/PermissaoProposta'
    PermissaoProposta:
      type: object
      required:
        - idEmpregado
        - idProposta
        - watcher
        - gestorProposta
        - avaliadorTecnico
        - gestorEquipa
      properties:
        idEmpregado:
          type: integer
          format: int64
        idProposta:
          type: string
          format: int11
        watcher:
          type: integer
          format: int1
        gestorProposta:
          type: integer
          format: int1
        avaliadorTecnico:
          type: integer
          format: int1
        gestorEquipa:
          type: integer
          format: int1
