openapi: 3.0.0
info:
  version: 1.0.1-oas3
  title: API PEI - SimpliHire
  license:
    name: MIT
tags:
  - name: Recrutador
    description: Operações relativos aos recrutadores
  - name: Avalidador Técnico
    description: Operações relativos aos avaliadores técnicos
  - name: Candidatos
    description: Operações relativos aos candidatos
  - name: Empresa
    description: Operações relativos à empresa empregadora
paths:
  '/empresa/login':
    get:
      summary: Início de sessão
      description: Ao chamar este endpoint o utilizador de uma empresa empregadora é autentificado
      operationId: loginEmpresa
      tags:
        - Empresa
      parameters:
        - name: username
          in: path
          required: true
          description: O username do utilizador
          schema:
            type: string
        - name: password
          in: path
          required: true
          description: A password do utilizador
          schema:
            type: string
      responses:
        '200':
          description: Mensagem a identificar sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAnswer'
        '401':
          description: Password Errada / Utilizador não existente
  '/empresa/logout':
    get:
      summary: Terminar sessão
      description: Ao chamar este endpoint é terminada a sessão de um utilizador de uma empresa empregadora
      operationId: logoutEmpresa
      tags:
        - Empresa
      responses:
        '200':
          description: Utilizador com sessão terminada
  '/propostas/{idProposta}/':
    get:
      summary: Informação de uma proposta
      description: Ao chamar este endpoint devolve informação de uma proposta de emprego
      operationId: getPropostaByID
      tags:
        - Empresa
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a obter
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposta'
  '/propostas/propostasAdicionadas':
    get:
      summary: Propostas Adicionadas
      description: Ao chamar este endpoint devolve informações de todas as propostas adicionadas pela empresa
      operationId: propostasAdicionadas
      security:
        - jwtAuth: []
      tags:
        - Recrutador
      responses:
        '200':
          description: As propostas adicionadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  '/propostas/{idProposta}/getFaseProposta':
    get:
      summary: GET fase de uma proposta
      description: Ao chamar este endpoint devolve a fase em que uma determinada proposta se encontra
      operationId: fasePropostaPorId
      security:
        - jwtAuth: []
      tags:
        - Recrutador
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta à qual se quer descobrir a fase
          schema:
            type: string
      responses:
        '200':
          description: A fase da proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  '/propostas/{idProposta}/getEstadoProposta':
    get:
      summary: GET estado de uma proposta
      description: Ao chamar este endpoint devolve o estado em que uma determinada proposta se encontra
      operationId: faseEstadoPorId
      security:
        - jwtAuth: []
      tags:
        - Recrutador
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta à qual se quer descobrir o estado
          schema:
            type: string
      responses:
        '200':
          description: O estado da proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  '/propostas/{idProposta}/putEstadoProposta/{estado}':
    put:
      summary: Adiciona estado a proposta de emprego
      description: Ao chamar este endpoint será adicionada um estado a uma determinada proposta de emprego
      operationId: putEstadoEmPropostaPorIds
      tags:
        - Recrutador
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
        - name: estado
          in: path
          required: true
          description: O estado que se quer adicionar à proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Estado adicionado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro ao adicionar o estado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/putFaseProposta/{fase}':
    put:
      summary: Adiciona fase a proposta de emprego
      description: Ao chamar este endpoint será adicionada uma fase a uma determinada proposta de emprego
      operationId: putFaseEmPropostaPorIds
      tags:
        - Recrutador
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
        - name: fase
          in: path
          required: true
          description: A fase que se quer adicionar à proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Fase adicionada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro ao adicionar a fase
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/propostasPublicadas':
    get:
      summary: Propostas Adicionadas
      description: Ao chamar este endpoint devolve informações de todas as propostas publicadas pela empresa
      operationId: propostasPublicadas
      security:
        - jwtAuth: []
      tags:
        - Recrutador
      responses:
        '200':
          description: As propostas publicadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  '/propostas/{idProposta}/associarAvaliadorTecnico':
    put:
      summary: Associar avaliador técnico a uma proposta de emprego
      description: Ao chamar este endpoint um avaliador técnico será associado a uma proposta de emprego
      operationId: associaAvaliadorAPropostaPorIds
      tags:
        - Recrutador
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
        - name: idAvaliador
          in: path
          required: true
          description: O id do avaliador a ser associado à proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Avaliador associado com sucesso à proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Erro a associador o avaliador à proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/publicar':
    put:
      summary: Publicação de uma proposta
      description: Ao chamar este endpoint uma proposta adicionada é públicada no sistema
      operationId: publishPropostaByID
      tags:
        - Recrutador
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a publicar
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Proposta publicada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Proposta publicada com erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/encerrar':
    put:
      summary: Encerramento de uma proposta
      description: Ao chamar este endpoint uma proposta adicionada é encerrada no sistema
      operationId: closePropostaByID
      tags:
        - Recrutador
      security:
        - jwtAuth: []
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a encerrar
          schema:
            type: string
      responses:
        '200':
          description: Proposta encerrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Proposta encerrada com erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidatos/{idCandidato}/':
    get:
      summary: Informação de um candidato
      description: Ao chamar este endpoint devolve informação pessoal de um candidato
      operationId: getCandidatoById
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a obter
          schema:
            type: string
      responses:
        '200':
          description: Um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidato'
  '/candidatos/registoCandidato':
    put:
      summary: Registo de um candidato no sistema
      description: A invocação deste endpoint remete para o registo de um candidato na plataforma SimpliHire
      operationId: registarCandidato
      tags:
        - Candidatos
      responses:
        '200':
          description: Foi registado no sistema com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidato'
  '/candidatos/{idCandidato}/proposta/{idProposta}/estadoCandidatura':
    get:
      summary: Informação de uma candidatura
      description: A invocação deste endpoint retorna a informação/estado de uma candidatura
      operationId: getCandidatura
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Informação relativa a uma candidatura a uma proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
  '/candidatos/{idCandidato}/proposta/{idProposta}/SituacaoCandidatura':
    get:
      summary: Situacao de uma candidatura
      description: A invocação deste endpoint retorna a situacao de uma candidatura
      operationId: getSituacao
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Situacao relativa a uma candidatura a uma proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
  '/candidatos/{idCandidato}/proposta{idProposta}/putAnotacoes/{tecnicas}/{salario}/{rh}/{gestao}/{avaliacao}':
    put:
      summary: Adiciona anotacoes a uma candidatura
      description: A invocação deste endpoint envolve a atribuição de anotações a uma candidatura
      operationId: putAnotacoesNumaCandidatura
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
        - name: tecnicas
          in: path
          required: true
          description: Tecnicas
          schema:
            type: string
        - name: salario
          in: path
          required: true
          description: Salário
          schema:
            type: integer
        - name: rh
          in: path
          required: true
          description: Recursos Humanos
          schema:
            type: string
        - name: gestao
          in: path
          required: true
          description: Gestão
          schema:
            type: string
        - name: avaliacao
          in: path
          required: true
          description: Avaliação da candidatura
          schema:
            type: string
      responses:
        '200':
          description: Anotações adicionadas com sucesso à candidatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
  '/candidatos/{idCandidato}/proposta{idProposta}/putAnotacoes/{tecnicas}/{avaliacao}/{entrevista}':
    put:
      summary: Adiciona anotacoes a uma candidatura
      description: A invocação deste endpoint envolve a atribuição de anotações a uma candidatura
      operationId: putAnotacoesNumaCandidatura
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
        - name: tecnicas
          in: path
          required: true
          description: Tecnicas
          schema:
            type: string
        - name: entrevista
          in: path
          required: true
          description: Tecnicas
          schema:
            type: string 
        - name: avaliacao
          in: path
          required: true
          description: Avaliação da candidatura
          schema:
            type: string
      responses:
        '200':
          description: Anotações adicionadas com sucesso à candidatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
  '/candidatos/{idCandidato}/proposta/{idProposta}/submeterCandidatura':
    put:
      summary: Submissão de uma candidatura a uma proposta de emprego
      description: A invocação deste endpoint envolve a submissão de uma candidatura a uma proposta de emprego publicada
      operationId: submitCandidatura
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
      responses:
        '200':
          description: Candidatura submetida com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
  '/candidatos/{idCandidato}/caixamensagens/{idGestorProposta}/mensagens':
    get:
      summary: Mensagens recebidas do gestor da proposta pelo candidato a uma proposta de emprego
      description: A invocação deste endpoint devolve as mensagens recebidas pelo candidato provenientes do gestor de uma proposta
      operationId: getMensagensGestorProposta
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato de quem se pretende consultar as mensagens
          schema:
            type: string
        - name: idGestorProposta
          in: path
          required: true
          description: Autor das mensagens recebidas pelo candidato
          schema:
            type: string
      responses:
        '200':
          description: Mensagens recebidas 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagens'
  '/candidatos/{idCandidato}/caixamensagens/{idGestorProposta}/mensagem':
    put:
      summary: Envio de uma mensagem a um gestor da proposta
      description: A invocação deste endpoint remete ao envio de uma mensagem por parte do candidato ao gestor de propostas
      operationId: sendMensagemGestorProposta
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idGestorProposta
          in: path
          required: true
          description: O id do gestor da proposta
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Mensagem enviada com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
        '400':
          description: Mensagem não foi enviada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidatos/{idCandidato}/qualificacoesCandidato':
    get:
      summary: Qualificações técnicas de um candidato
      description: Este endpoint devolve as qualificações técnicas do candidato
      operationId: getQualificacoesCandidato
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com as qualificações técnicas que se pretende obter
          schema:
            type: string
      responses:
        '200':
          description: As qualificações técnicas do candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificacoesTecnicas'
  '/candidatos/{idCandidato}/experienciaCandidato':
    get:
      summary: Experiência de um candidato
      description: Este endpoint devolve a experiência profissional do candidato
      operationId: getExperienciaProfissional
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O ID do candidato com a experiência profissional que se pretende obter
          schema:
            type: string
      responses:
        '200':
          description: A experiência profissional do candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienciaProfissional'   
  '/candidatos/{idCandidato}/qualificacoes':
    put:
      summary: Indicação das qualificações técnicas de um candidato
      description: O candidato submete as suas qualificações técnicas
      operationId: putQualificacoesCandidato
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato que submete as qualificações técnicas
          schema:
            type: string
      responses:
        '200':
          description: Qualificações técnicas submetidas com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificacoesTecnicas'
  '/candidatos/{idCandidato}/experienciaProfissional':
    put:
      summary: Indicação da experiência de um candidato
      description: O candidato submete a sua experiência profissional
      operationId: putExperiencia
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato que submete a experiência profissional
          schema:
            type: string
      responses:
        '200':
          description: Experiência profissional submetida com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienciaProfissional'
  '/candidatos/{idCandidato}/proposta{idProposta}/putEstado/{estado}':
    put:
      summary: Associa estado a uma candidatura
      description: A invocação deste endpoint envolve a atribuição de um estado a uma candidatura
      operationId: putEstadoEmCandidatura
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
        - name: estado
          in: path
          required: true
          description: O estado da candidatura
          schema:
            type: string
      responses:
        '200':
          description: Estado adicionado à candidatura com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
  '/candidatos/{idCandidato}/proposta{idProposta}/putSituacao/{situacao}':
    put:
      summary: Associa situacao a uma candidatura
      description: A invocação deste endpoint envolve a atribuição de uma situacao a uma candidatura
      operationId: putSituacaoEmCandidatura
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato
          schema:
            type: string
        - name: idProposta
          in: path
          required: true
          description: O id da proposta
          schema:
            type: string
        - name: situacao
          in: path
          required: true
          description: A situacao da candidatura
          schema:
            type: string
      responses:
        '200':
          description: Situacao adicionada à candidatura com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
  '/candidatos/{idCandidato}/propostas':
    get:
      summary: Lista de propostas do candidato
      description: Ao chamar este endpoint devolve a lista de propostas do candidato
      operationId: getPropostasCandidato
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a quem as propostas pertencem
          schema:
            type: string
      responses:
        '200':
          description: Uma lista das propostas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  '/candidatos/login':
    get:
      summary: Início de sessão do lado do candidato
      operationId: loginCandidatos
      tags:
        - Candidatos
      parameters:
        - name: username
          in: path
          required: true
          description: O username do utilizador
          schema:
            type: string
        - name: password
          in: path
          required: true
          description: A password do utilizador
          schema:
            type: string
      responses:
        '200':
          description: Mensagem a identificar sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAnswer'
        '401':
          description: Password Errada / Utilizador não existente
components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Candidato:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Candidatos:
      type: array
      items:
        $ref: '#/components/schemas/Candidato'
    Candidatura:
      required:
        - id
        - estado
      properties:
        id:
          type: integer
          format: int64
        estado:
          type: string
    Proposta:
      required:
        - id
        - empresa
        - posicao
        - dataLimite
      properties:
        id:
          type: integer
          format: int64
        empresa:
          type: string
        posicao:
          type: string
        dataLimite:
          type: string
    Propostas:
      type: array
      items:
        $ref: '#/components/schemas/Proposta'
    QualificacaoTecnica:
      required:
        - id
        - designacao
        - nivel
      properties:
        id:
          type: integer
          format: int64
        designacao:
          type: string
        nivel:
          type: string
    ExperienciaProf:
      required:
        - empresa
        - prazo
        - cargo
      properties:
        empresa:
          type: string
        prazo:
          type: string
        cargo:
          type: string
    QualificacoesTecnicas:
      type: array
      items:
        $ref: '#/components/schemas/QualificacaoTecnica'
    ExperienciaProfissional:
      type: array
      items:
        $ref: '#/components/schemas/ExperienciaProf'
    Mensagem:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Mensagens:
      type: array
      items:
        $ref: '#/components/schemas/Mensagem'
    LoginAnswer:
      required:
        - loggedIn
        - userType
      properties:
        loggedIn:
          type: boolean
        JWT:
          type: string
          description: JSON Web Token
    Status:
      description: Se o pedido efetuado teve sucesso ou erro
      required:
        - status
      properties:
        ok:
          type: boolean
          description: 'True se teve sucesso, False se houver erro'
        error:
          type: string
          description: Descrição de erro
    Exame_Técnico:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Pergunta_Técnica:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
