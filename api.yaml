openapi: 3.0.0
info:
  version: 1.0.0-oas3
  title: API PEI - SimpliHire
  license:
    name: MIT
tags:
  - name: Recrutador
    description: Operações que os recrutadores têm acesso
  - name: Avaliador Técnico
    description: Operações que os avalidadores técnicos têm acesso
  - name: Candidatos
    description: Operações relativos aos candidatos
  - name: Empresa
    description: Operações relativos à empresa empregadora
paths:
  /empresa/login:
    get:
      summary: Início de sessão
      description: Ao chamar este endpoint o utilizador de uma empresa empregadora é autentificado
      operationId: loginEmpresa
      tags:
        - Empresa
      parameters:
        - name: username
          in: path
          required: true
          description: O username do utilizador
          schema:
            type: string
        - name: password
          in: path
          required: true
          description: A password do utilizador
          schema:
            type: string
      responses:
        '200':
          description: Mensagem a identificar sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAnswer'
        '401':
          description: Password Errada / Utilizador não existente
  /empresa/logout:
    get:
      summary: Terminar sessão
      description: Ao chamar este endpoint é terminada a sessão de um utilizador de uma empresa empregadora
      operationId: logoutEmpresa
      tags:
        - Empresa
      responses:
        '200':
          description: Utilizador com sessão terminada
  '/propostas/{idProposta}/':
    get:
      summary: Informação de uma proposta
      description: Ao chamar este endpoint devolve informação de uma proposta de emprego
      operationId: getPropostaByID
      tags:
        - Empresa
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a obter
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposta'
  /propostas/propostasAdicionadas:
    get:
      summary: Propostas Adicionadas
      description: Ao chamar este endpoint devolve informações de todas as propostas adicionadas pela empresa
      operationId: propostasAdicionadas
      security:
        - jwtAuth: []
      tags:
        - Recrutador
      responses:
        '200':
          description: As propostas adicionadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  /propostas/propostasPublicadas:
    get:
      summary: Propostas Adicionadas
      description: Ao chamar este endpoint devolve informações de todas as propostas publicadas pela empresa
      operationId: propostasPublicadas
      security:
        - jwtAuth: []
      tags:
        - Recrutador
      responses:
        '200':
          description: As propostas publicadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  '/propostas/{idProposta}/publicar':
    put:
      summary: Publicação de uma proposta
      description: Ao chamar este endpoint uma proposta adicionada é públicada no sistema
      operationId: publishPropostaByID
      tags:
        - Recrutador
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a publicar
          schema:
            type: string
      security:
        - jwtAuth: []
      responses:
        '200':
          description: Proposta publicada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Proposta publicada com erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/{idProposta}/encerrar':
    put:
      summary: Encerramento de uma proposta
      description: Ao chamar este endpoint uma proposta adicionada é encerrada no sistema
      operationId: closePropostaByID
      tags:
        - Recrutador
      security:
        - jwtAuth: []
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a encerrar
          schema:
            type: string
      responses:
        '200':
          description: Proposta encerrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Proposta encerrada com erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/propostas/':
    post:
      summary: Criação de uma proposta
      description: Ao chamar este endpoint uma proposta adicionada é criada
      operationId: publishPropostaByID
      tags:
        - Recrutador
      security:
        - jwtAuth: []
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposta'
      responses:
        '200':
          description: Proposta publicada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Proposta publicada com erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  '/candidaturas/{idProposta}/':
    get:
      summary: Lista sorteada de candidaturas de uma proposta
      description: Lista ordenada (por pontuação) das candidaturas a uma proposta
      operationId: candidaturasOrdenadas
      tags:
        - Recrutador
        - Avaliador Técnico
      security:
        - jwtAuth: []
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a procurar
          schema:
            type: string
      responses:
        '200':
          description: Candidaturas obtidas com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidaturas'
        '400':
          description: Erro a obter proposta
        '401':
          description: Não Autorizado
        '404':
          description: Proposta não encontrada
  '/candidaturas/{idProposta}/{idCandidato}':
    get:
      summary: Obter candidatura (Proposta+Candidato)
      description: Obter informações de uma candidatura de um candidato a uma proposta
      operationId: getCandidaturaByProposta\&Candidato
      tags:
        - Recrutador
        - Avaliador Técnico
      security:
        - jwtAuth: []
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a procurar
          schema:
            type: string
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a procurar
          schema:
            type: string
      responses:
        '200':
          description: Candidatura obtidas com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
        '400':
          description: Erro a obter proposta
        '401':
          description: Não Autorizado
        '404':
          description: Proposta não encontrada
  '/candidaturas/{idProposta}/{idCandidato}/anotacoes':
    get:
      summary: Obter anotações de uma candidatura
      description: Obter anotações de uma candidatura de um candidato a uma proposta
      operationId: getAnotacoesCandidatura
      tags:
        - Recrutador
        - Avaliador Técnico
      security:
        - jwtAuth: []
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a procurar
          schema:
            type: string
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a procurar
          schema:
            type: string
      responses:
        '200':
          description: Anotações obtidas com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
        '400':
          description: Erro a obter anotações
        '401':
          description: Não Autorizado
        '404':
          description: Candidatura não encontrada
  '/candidaturas/{idProposta}/{idCandidato}/anotacoes/publicar':
    put:
      summary: Publicar anotações de uma candidatura
      description: Publicar anotações de uma candidatura de um candidato a uma proposta
      operationId: putAnotacoesCandidatura
      tags:
        - Avaliador Técnico
      security:
        - jwtAuth: []
      requestBody:
          description: Optional description in *Markdown*
          required: true
          content:
            text/plain:
              schema:
                type: string
      parameters:
        - name: idProposta
          in: path
          required: true
          description: O id da proposta a procurar
          schema:
            type: string
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a procurar
          schema:
            type: string
      responses:
        '200':
          description: Anotações publicadas com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidatura'
        '400':
          description: Erro a obter anotações
        '401':
          description: Não Autorizado
        '404':
          description: Candidatura não encontrada
  '/candidatos/{idCandidato}/':
    get:
      summary: Informação de um candidato
      description: Ao chamar este endpoint devolve informação pessoal de um candidato
      operationId: getCandidatoById
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a obter
          schema:
            type: string
      responses:
        '200':
          description: Um candidato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidato'
  '/candidatos/{idCandidato}/propostas':
    get:
      summary: Lista de propostas do candidato
      description: Ao chamar este endpoint devolve a lista de propostas do candidato
      operationId: getPropostasCandidato
      tags:
        - Candidatos
      parameters:
        - name: idCandidato
          in: path
          required: true
          description: O id do candidato a quem as propostas a obter pertencem
          schema:
            type: string
      responses:
        '200':
          description: Uma lista das propostas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Propostas'
  /candidatos/login:
    get:
      summary: Início de sessão do lado do candidato
      operationId: loginCandidatos
      tags:
        - Candidatos
      parameters:
        - name: username
          in: path
          required: true
          description: O username do utilizador
          schema:
            type: string
        - name: password
          in: path
          required: true
          description: A password do utilizador
          schema:
            type: string
      responses:
        '200':
          description: Mensagem a identificar sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAnswer'
        '401':
          description: Password Errada / Utilizador não existente
components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Candidato:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Candidatos:
      type: array
      items:
        $ref: '#/components/schemas/Candidato'
    Proposta:
      required:
        - id
        - empresa
        - posicao
        - dataLimite
      properties:
        id:
          type: integer
          format: int64
        empresa:
          type: string
        posicao:
          type: string
        dataLimite:
          type: string
    Propostas:
      type: array
      items:
        $ref: '#/components/schemas/Proposta'
    Mensagem:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    LoginAnswer:
      required:
        - loggedIn
        - userType
      properties:
        loggedIn:
          type: boolean
        JWT:
          type: string
          description: JSON Web Token
    Status:
      description: Se o pedido efetuado teve sucesso ou erro
      required:
        - status
      properties:
        ok:
          type: boolean
          description: 'True se teve sucesso, False se houver erro'
        error:
          type: string
          description: Descrição de erro
    Exame_Técnico:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Pergunta_Técnica:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Candidatura:
      required:
        - id
        - nome
        - email
        - universidade
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        universidade:
          type: string
    Candidaturas:
      type: array
      items:
        $ref: '#/components/schemas/Candidatura'
